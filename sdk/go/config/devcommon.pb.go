// Code generated by protoc-gen-go. DO NOT EDIT.
// source: devcommon.proto

package config

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UUIDandVersion struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UUIDandVersion) Reset()         { *m = UUIDandVersion{} }
func (m *UUIDandVersion) String() string { return proto.CompactTextString(m) }
func (*UUIDandVersion) ProtoMessage()    {}
func (*UUIDandVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2bb9fc347232ae8, []int{0}
}

func (m *UUIDandVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UUIDandVersion.Unmarshal(m, b)
}
func (m *UUIDandVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UUIDandVersion.Marshal(b, m, deterministic)
}
func (m *UUIDandVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UUIDandVersion.Merge(m, src)
}
func (m *UUIDandVersion) XXX_Size() int {
	return xxx_messageInfo_UUIDandVersion.Size(m)
}
func (m *UUIDandVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_UUIDandVersion.DiscardUnknown(m)
}

var xxx_messageInfo_UUIDandVersion proto.InternalMessageInfo

func (m *UUIDandVersion) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *UUIDandVersion) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Device Operational Commands Semantic
// For rebooting device,  command=Reset, counter = counter+delta, desiredState = on
// For poweroff device,  command=Reset, counter = counter+delta, desiredState = off
// For backup at midnight, command=Backup, counter = counter+delta, desiredState=n/a, opsTime = mm/dd/yy:hh:ss
// Current implementation does support only single command outstanding for each type
// In future can be extended to have more scheduled events
//
type DeviceOpsCmd struct {
	Counter      uint32 `protobuf:"varint,2,opt,name=counter,proto3" json:"counter,omitempty"`
	DesiredState bool   `protobuf:"varint,3,opt,name=desiredState,proto3" json:"desiredState,omitempty"`
	// FIXME: change to timestamp, once we move to gogo proto
	OpsTime              string   `protobuf:"bytes,4,opt,name=opsTime,proto3" json:"opsTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceOpsCmd) Reset()         { *m = DeviceOpsCmd{} }
func (m *DeviceOpsCmd) String() string { return proto.CompactTextString(m) }
func (*DeviceOpsCmd) ProtoMessage()    {}
func (*DeviceOpsCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2bb9fc347232ae8, []int{1}
}

func (m *DeviceOpsCmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceOpsCmd.Unmarshal(m, b)
}
func (m *DeviceOpsCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceOpsCmd.Marshal(b, m, deterministic)
}
func (m *DeviceOpsCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceOpsCmd.Merge(m, src)
}
func (m *DeviceOpsCmd) XXX_Size() int {
	return xxx_messageInfo_DeviceOpsCmd.Size(m)
}
func (m *DeviceOpsCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceOpsCmd.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceOpsCmd proto.InternalMessageInfo

func (m *DeviceOpsCmd) GetCounter() uint32 {
	if m != nil {
		return m.Counter
	}
	return 0
}

func (m *DeviceOpsCmd) GetDesiredState() bool {
	if m != nil {
		return m.DesiredState
	}
	return false
}

func (m *DeviceOpsCmd) GetOpsTime() string {
	if m != nil {
		return m.OpsTime
	}
	return ""
}

// Timers and other per-device policy which relates to the interaction
// with zedcloud. Note that the timers are randomized on the device
// to avoid synchronization with other devices. Random range is between
// between .5 and 1.5 of these nominal values. If not set (i.e. zero),
// it means the default value of 60 seconds.
type ConfigItem struct {
	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Below section will be deprecated
	//
	// Types that are valid to be assigned to ConfigItemValue:
	//	*ConfigItem_BoolValue
	//	*ConfigItem_Uint32Value
	//	*ConfigItem_Uint64Value
	//	*ConfigItem_FloatValue
	//	*ConfigItem_StringValue
	ConfigItemValue      isConfigItem_ConfigItemValue `protobuf_oneof:"configItemValue"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ConfigItem) Reset()         { *m = ConfigItem{} }
func (m *ConfigItem) String() string { return proto.CompactTextString(m) }
func (*ConfigItem) ProtoMessage()    {}
func (*ConfigItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2bb9fc347232ae8, []int{2}
}

func (m *ConfigItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigItem.Unmarshal(m, b)
}
func (m *ConfigItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigItem.Marshal(b, m, deterministic)
}
func (m *ConfigItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigItem.Merge(m, src)
}
func (m *ConfigItem) XXX_Size() int {
	return xxx_messageInfo_ConfigItem.Size(m)
}
func (m *ConfigItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigItem.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigItem proto.InternalMessageInfo

func (m *ConfigItem) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ConfigItem) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type isConfigItem_ConfigItemValue interface {
	isConfigItem_ConfigItemValue()
}

type ConfigItem_BoolValue struct {
	BoolValue bool `protobuf:"varint,3,opt,name=boolValue,proto3,oneof"`
}

type ConfigItem_Uint32Value struct {
	Uint32Value uint32 `protobuf:"varint,4,opt,name=uint32Value,proto3,oneof"`
}

type ConfigItem_Uint64Value struct {
	Uint64Value uint64 `protobuf:"varint,5,opt,name=uint64Value,proto3,oneof"`
}

type ConfigItem_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,6,opt,name=floatValue,proto3,oneof"`
}

type ConfigItem_StringValue struct {
	StringValue string `protobuf:"bytes,7,opt,name=stringValue,proto3,oneof"`
}

func (*ConfigItem_BoolValue) isConfigItem_ConfigItemValue() {}

func (*ConfigItem_Uint32Value) isConfigItem_ConfigItemValue() {}

func (*ConfigItem_Uint64Value) isConfigItem_ConfigItemValue() {}

func (*ConfigItem_FloatValue) isConfigItem_ConfigItemValue() {}

func (*ConfigItem_StringValue) isConfigItem_ConfigItemValue() {}

func (m *ConfigItem) GetConfigItemValue() isConfigItem_ConfigItemValue {
	if m != nil {
		return m.ConfigItemValue
	}
	return nil
}

func (m *ConfigItem) GetBoolValue() bool {
	if x, ok := m.GetConfigItemValue().(*ConfigItem_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (m *ConfigItem) GetUint32Value() uint32 {
	if x, ok := m.GetConfigItemValue().(*ConfigItem_Uint32Value); ok {
		return x.Uint32Value
	}
	return 0
}

func (m *ConfigItem) GetUint64Value() uint64 {
	if x, ok := m.GetConfigItemValue().(*ConfigItem_Uint64Value); ok {
		return x.Uint64Value
	}
	return 0
}

func (m *ConfigItem) GetFloatValue() float32 {
	if x, ok := m.GetConfigItemValue().(*ConfigItem_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (m *ConfigItem) GetStringValue() string {
	if x, ok := m.GetConfigItemValue().(*ConfigItem_StringValue); ok {
		return x.StringValue
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ConfigItem) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ConfigItem_BoolValue)(nil),
		(*ConfigItem_Uint32Value)(nil),
		(*ConfigItem_Uint64Value)(nil),
		(*ConfigItem_FloatValue)(nil),
		(*ConfigItem_StringValue)(nil),
	}
}

// Adapter bundles corresponding to a subset of what is in ZioBundle
type Adapter struct {
	Type                 ZCioType `protobuf:"varint,1,opt,name=type,proto3,enum=ZCioType" json:"type,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Adapter) Reset()         { *m = Adapter{} }
func (m *Adapter) String() string { return proto.CompactTextString(m) }
func (*Adapter) ProtoMessage()    {}
func (*Adapter) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2bb9fc347232ae8, []int{3}
}

func (m *Adapter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Adapter.Unmarshal(m, b)
}
func (m *Adapter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Adapter.Marshal(b, m, deterministic)
}
func (m *Adapter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Adapter.Merge(m, src)
}
func (m *Adapter) XXX_Size() int {
	return xxx_messageInfo_Adapter.Size(m)
}
func (m *Adapter) XXX_DiscardUnknown() {
	xxx_messageInfo_Adapter.DiscardUnknown(m)
}

var xxx_messageInfo_Adapter proto.InternalMessageInfo

func (m *Adapter) GetType() ZCioType {
	if m != nil {
		return m.Type
	}
	return ZCioType_ZCioNop
}

func (m *Adapter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*UUIDandVersion)(nil), "UUIDandVersion")
	proto.RegisterType((*DeviceOpsCmd)(nil), "DeviceOpsCmd")
	proto.RegisterType((*ConfigItem)(nil), "ConfigItem")
	proto.RegisterType((*Adapter)(nil), "Adapter")
}

func init() { proto.RegisterFile("devcommon.proto", fileDescriptor_c2bb9fc347232ae8) }

var fileDescriptor_c2bb9fc347232ae8 = []byte{
	// 383 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0xc1, 0x6f, 0xd3, 0x30,
	0x14, 0x87, 0x9b, 0x2d, 0x5b, 0xe9, 0x63, 0xeb, 0xc0, 0xe2, 0x10, 0x21, 0x01, 0x51, 0xb8, 0xe4,
	0x94, 0x48, 0x1b, 0xe2, 0x84, 0x90, 0x58, 0x27, 0xd4, 0x9d, 0x90, 0xc2, 0xb6, 0x43, 0x6f, 0x69,
	0xfc, 0x1a, 0xac, 0xc6, 0x7e, 0x51, 0x62, 0x47, 0x2a, 0xff, 0x37, 0x77, 0x64, 0x3b, 0x81, 0xee,
	0xf6, 0x7e, 0x9f, 0xbf, 0xfa, 0xbd, 0x57, 0x07, 0xae, 0x38, 0x0e, 0x15, 0x49, 0x49, 0x2a, 0x6b,
	0x3b, 0xd2, 0xf4, 0x76, 0xc9, 0x71, 0x90, 0xc4, 0xb1, 0xf1, 0x39, 0xf9, 0x0a, 0xcb, 0xc7, 0xc7,
	0xfb, 0xbb, 0x52, 0xf1, 0x27, 0xec, 0x7a, 0x41, 0x8a, 0x31, 0x08, 0x8d, 0x11, 0x3c, 0x0a, 0xe2,
	0x20, 0x5d, 0x14, 0xae, 0x66, 0x11, 0xcc, 0x07, 0x7f, 0x1c, 0x9d, 0x38, 0x3c, 0xc5, 0x64, 0x07,
	0x17, 0x77, 0x38, 0x88, 0x0a, 0x7f, 0xb4, 0xfd, 0x4a, 0x3a, 0xb3, 0x22, 0xa3, 0x34, 0x76, 0xce,
	0xbc, 0x2c, 0xa6, 0xc8, 0x12, 0xb8, 0xe0, 0xd8, 0x8b, 0x0e, 0xf9, 0x4f, 0x5d, 0x6a, 0x8c, 0x4e,
	0xe3, 0x20, 0x7d, 0x51, 0x3c, 0x63, 0xf6, 0xd7, 0xd4, 0xf6, 0x0f, 0x42, 0x62, 0x14, 0xfa, 0x3e,
	0x63, 0x4c, 0xfe, 0x04, 0x00, 0x2b, 0x52, 0x3b, 0x51, 0xdf, 0x6b, 0x94, 0xec, 0x15, 0x9c, 0xee,
	0xf1, 0x30, 0xce, 0x68, 0x4b, 0xf6, 0x06, 0xce, 0x86, 0xb2, 0x31, 0x38, 0x0e, 0xe8, 0x03, 0x7b,
	0x0f, 0x8b, 0x2d, 0x51, 0xf3, 0xe4, 0x4e, 0x5c, 0xc7, 0xf5, 0xac, 0xf8, 0x8f, 0x58, 0x02, 0x2f,
	0x8d, 0x50, 0xfa, 0xe6, 0xda, 0x1b, 0xb6, 0xe9, 0xe5, 0x7a, 0x56, 0x1c, 0xc3, 0xc9, 0xf9, 0xfc,
	0xc9, 0x3b, 0x67, 0x71, 0x90, 0x86, 0x93, 0x33, 0x42, 0x16, 0x03, 0xec, 0x1a, 0x2a, 0xb5, 0x57,
	0xce, 0xe3, 0x20, 0x3d, 0x59, 0xcf, 0x8a, 0x23, 0x66, 0x6f, 0xe9, 0x75, 0x27, 0x54, 0xed, 0x95,
	0xb9, 0x9d, 0xd2, 0xde, 0x72, 0x04, 0x6f, 0x5f, 0xc3, 0x55, 0xf5, 0x6f, 0x47, 0x87, 0x92, 0x2f,
	0x30, 0xff, 0xc6, 0xcb, 0xd6, 0xfe, 0x81, 0xef, 0x20, 0xd4, 0x87, 0x16, 0xdd, 0xd2, 0xcb, 0xeb,
	0x45, 0xb6, 0x59, 0x09, 0x7a, 0x38, 0xb4, 0x58, 0x38, 0x6c, 0xdf, 0x4d, 0x95, 0x72, 0xda, 0xdf,
	0xd5, 0xb7, 0xdf, 0xe1, 0x43, 0x45, 0x32, 0xfb, 0x8d, 0x1c, 0x79, 0x99, 0x55, 0x0d, 0x19, 0x9e,
	0x99, 0x1e, 0x3b, 0xfb, 0x60, 0xfe, 0x03, 0xd8, 0x7c, 0xac, 0x85, 0xfe, 0x65, 0xb6, 0x59, 0x45,
	0x32, 0xf7, 0x5e, 0x8e, 0x03, 0xe6, 0x3d, 0xdf, 0xe7, 0x35, 0xe5, 0x7e, 0x9c, 0xed, 0xb9, 0x73,
	0x6f, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x31, 0xd7, 0x3e, 0x0a, 0x4f, 0x02, 0x00, 0x00,
}
