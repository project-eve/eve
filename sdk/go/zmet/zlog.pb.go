// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zlog.proto

package zmet

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LogEntry struct {
	Severity             string               `protobuf:"bytes,1,opt,name=severity,proto3" json:"severity,omitempty"`
	Source               string               `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Iid                  string               `protobuf:"bytes,3,opt,name=iid,proto3" json:"iid,omitempty"`
	Content              string               `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Msgid                uint64               `protobuf:"varint,5,opt,name=msgid,proto3" json:"msgid,omitempty"`
	Tags                 map[string]string    `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LogEntry) Reset()         { *m = LogEntry{} }
func (m *LogEntry) String() string { return proto.CompactTextString(m) }
func (*LogEntry) ProtoMessage()    {}
func (*LogEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c41433984f977f, []int{0}
}

func (m *LogEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEntry.Unmarshal(m, b)
}
func (m *LogEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEntry.Marshal(b, m, deterministic)
}
func (m *LogEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEntry.Merge(m, src)
}
func (m *LogEntry) XXX_Size() int {
	return xxx_messageInfo_LogEntry.Size(m)
}
func (m *LogEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEntry.DiscardUnknown(m)
}

var xxx_messageInfo_LogEntry proto.InternalMessageInfo

func (m *LogEntry) GetSeverity() string {
	if m != nil {
		return m.Severity
	}
	return ""
}

func (m *LogEntry) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *LogEntry) GetIid() string {
	if m != nil {
		return m.Iid
	}
	return ""
}

func (m *LogEntry) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *LogEntry) GetMsgid() uint64 {
	if m != nil {
		return m.Msgid
	}
	return 0
}

func (m *LogEntry) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *LogEntry) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type LogBundle struct {
	DevID                string               `protobuf:"bytes,1,opt,name=devID,proto3" json:"devID,omitempty"`
	Image                string               `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Log                  []*LogEntry          `protobuf:"bytes,3,rep,name=log,proto3" json:"log,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LogBundle) Reset()         { *m = LogBundle{} }
func (m *LogBundle) String() string { return proto.CompactTextString(m) }
func (*LogBundle) ProtoMessage()    {}
func (*LogBundle) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c41433984f977f, []int{1}
}

func (m *LogBundle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogBundle.Unmarshal(m, b)
}
func (m *LogBundle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogBundle.Marshal(b, m, deterministic)
}
func (m *LogBundle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogBundle.Merge(m, src)
}
func (m *LogBundle) XXX_Size() int {
	return xxx_messageInfo_LogBundle.Size(m)
}
func (m *LogBundle) XXX_DiscardUnknown() {
	xxx_messageInfo_LogBundle.DiscardUnknown(m)
}

var xxx_messageInfo_LogBundle proto.InternalMessageInfo

func (m *LogBundle) GetDevID() string {
	if m != nil {
		return m.DevID
	}
	return ""
}

func (m *LogBundle) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *LogBundle) GetLog() []*LogEntry {
	if m != nil {
		return m.Log
	}
	return nil
}

func (m *LogBundle) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func init() {
	proto.RegisterType((*LogEntry)(nil), "LogEntry")
	proto.RegisterMapType((map[string]string)(nil), "LogEntry.TagsEntry")
	proto.RegisterType((*LogBundle)(nil), "LogBundle")
}

func init() { proto.RegisterFile("zlog.proto", fileDescriptor_f7c41433984f977f) }

var fileDescriptor_f7c41433984f977f = []byte{
	// 338 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x8f, 0xbd, 0x6e, 0xb3, 0x30,
	0x14, 0x86, 0x45, 0x20, 0x3f, 0x38, 0xcb, 0x27, 0x7f, 0x55, 0x65, 0xd1, 0x21, 0x34, 0x4b, 0x99,
	0x8c, 0x94, 0x0e, 0x8d, 0x3a, 0x46, 0xe9, 0x50, 0x29, 0x13, 0xca, 0xd4, 0x8d, 0xe0, 0x53, 0xd7,
	0x0a, 0x70, 0x22, 0x6c, 0x90, 0x92, 0x8b, 0xe8, 0x15, 0xf4, 0x62, 0x2b, 0x4c, 0xa0, 0xea, 0xd8,
	0xed, 0x3c, 0xc7, 0xef, 0xb1, 0xde, 0x87, 0x90, 0x4b, 0x8e, 0x92, 0x9f, 0x2a, 0x34, 0x18, 0x2c,
	0x24, 0xa2, 0xcc, 0x21, 0xb6, 0x74, 0xa8, 0xdf, 0x63, 0xa3, 0x0a, 0xd0, 0x26, 0x2d, 0x4e, 0x5d,
	0x60, 0xf9, 0x35, 0x22, 0xb3, 0x1d, 0xca, 0x97, 0xd2, 0x54, 0x67, 0x1a, 0x90, 0x99, 0x86, 0x06,
	0x2a, 0x65, 0xce, 0xcc, 0x09, 0x9d, 0xc8, 0x4f, 0x06, 0xa6, 0xb7, 0x64, 0xa2, 0xb1, 0xae, 0x32,
	0x60, 0x23, 0xfb, 0x72, 0x25, 0xfa, 0x8f, 0xb8, 0x4a, 0x09, 0xe6, 0xda, 0x65, 0x3b, 0x52, 0x46,
	0xa6, 0x19, 0x96, 0x06, 0x4a, 0xc3, 0x3c, 0xbb, 0xed, 0x91, 0xde, 0x90, 0x71, 0xa1, 0xa5, 0x12,
	0x6c, 0x1c, 0x3a, 0x91, 0x97, 0x74, 0x40, 0x1f, 0x88, 0x67, 0x52, 0xa9, 0xd9, 0x24, 0x74, 0xa3,
	0xf9, 0xea, 0x3f, 0xef, 0xeb, 0xf0, 0x7d, 0x2a, 0xb5, 0x9d, 0x12, 0x1b, 0xa0, 0x6b, 0xe2, 0x0f,
	0xf5, 0xd9, 0x34, 0x74, 0xa2, 0xf9, 0x2a, 0xe0, 0x9d, 0x20, 0xef, 0x05, 0xf9, 0xbe, 0x4f, 0x24,
	0x3f, 0xe1, 0xe0, 0x89, 0xf8, 0xc3, 0x67, 0x6d, 0xe3, 0x23, 0xf4, 0x82, 0xed, 0xd8, 0xf6, 0x6a,
	0xd2, 0xbc, 0xee, 0xd5, 0x3a, 0x78, 0x1e, 0xad, 0x9d, 0xe5, 0xa7, 0x43, 0xfc, 0x1d, 0xca, 0x4d,
	0x5d, 0x8a, 0x1c, 0xda, 0x9c, 0x80, 0xe6, 0x75, 0x7b, 0xbd, 0xed, 0xa0, 0xdd, 0xaa, 0x22, 0x95,
	0xc3, 0xb5, 0x05, 0x7a, 0x47, 0xdc, 0x1c, 0x25, 0x73, 0xad, 0x94, 0x3f, 0x48, 0x25, 0xed, 0xf6,
	0xb7, 0x89, 0xf7, 0x07, 0x93, 0xcd, 0x96, 0x2c, 0x32, 0x2c, 0xf8, 0x05, 0x04, 0x88, 0x94, 0x67,
	0x39, 0xd6, 0x82, 0xd7, 0x1a, 0xaa, 0x46, 0x65, 0xd7, 0xd3, 0xb7, 0x7b, 0xa9, 0xcc, 0x47, 0x7d,
	0xe0, 0x19, 0x16, 0x71, 0x97, 0x8b, 0xa1, 0x81, 0x58, 0x8b, 0x63, 0x2c, 0x31, 0xbe, 0x14, 0x60,
	0x0e, 0x13, 0x9b, 0x7c, 0xfc, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x17, 0x67, 0x7b, 0xca, 0x2b, 0x02,
	0x00, 0x00,
}
