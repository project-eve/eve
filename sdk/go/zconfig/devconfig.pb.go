// Code generated by protoc-gen-go. DO NOT EDIT.
// source: devconfig.proto

package zconfig

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SWAdapterType int32

const (
	SWAdapterType_IGNORE SWAdapterType = 0
	SWAdapterType_VLAN   SWAdapterType = 1
	SWAdapterType_BOND   SWAdapterType = 2
)

var SWAdapterType_name = map[int32]string{
	0: "IGNORE",
	1: "VLAN",
	2: "BOND",
}

var SWAdapterType_value = map[string]int32{
	"IGNORE": 0,
	"VLAN":   1,
	"BOND":   2,
}

func (x SWAdapterType) String() string {
	return proto.EnumName(SWAdapterType_name, int32(x))
}

func (SWAdapterType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fc17241cd6d97458, []int{0}
}

type MapServer struct {
	NameOrIp             string   `protobuf:"bytes,1,opt,name=NameOrIp,proto3" json:"NameOrIp,omitempty"`
	Credential           string   `protobuf:"bytes,2,opt,name=Credential,proto3" json:"Credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MapServer) Reset()         { *m = MapServer{} }
func (m *MapServer) String() string { return proto.CompactTextString(m) }
func (*MapServer) ProtoMessage()    {}
func (*MapServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc17241cd6d97458, []int{0}
}

func (m *MapServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapServer.Unmarshal(m, b)
}
func (m *MapServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapServer.Marshal(b, m, deterministic)
}
func (m *MapServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapServer.Merge(m, src)
}
func (m *MapServer) XXX_Size() int {
	return xxx_messageInfo_MapServer.Size(m)
}
func (m *MapServer) XXX_DiscardUnknown() {
	xxx_messageInfo_MapServer.DiscardUnknown(m)
}

var xxx_messageInfo_MapServer proto.InternalMessageInfo

func (m *MapServer) GetNameOrIp() string {
	if m != nil {
		return m.NameOrIp
	}
	return ""
}

func (m *MapServer) GetCredential() string {
	if m != nil {
		return m.Credential
	}
	return ""
}

type ZedServer struct {
	HostName             string   `protobuf:"bytes,1,opt,name=HostName,proto3" json:"HostName,omitempty"`
	EID                  []string `protobuf:"bytes,2,rep,name=EID,proto3" json:"EID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZedServer) Reset()         { *m = ZedServer{} }
func (m *ZedServer) String() string { return proto.CompactTextString(m) }
func (*ZedServer) ProtoMessage()    {}
func (*ZedServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc17241cd6d97458, []int{1}
}

func (m *ZedServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZedServer.Unmarshal(m, b)
}
func (m *ZedServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZedServer.Marshal(b, m, deterministic)
}
func (m *ZedServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZedServer.Merge(m, src)
}
func (m *ZedServer) XXX_Size() int {
	return xxx_messageInfo_ZedServer.Size(m)
}
func (m *ZedServer) XXX_DiscardUnknown() {
	xxx_messageInfo_ZedServer.DiscardUnknown(m)
}

var xxx_messageInfo_ZedServer proto.InternalMessageInfo

func (m *ZedServer) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *ZedServer) GetEID() []string {
	if m != nil {
		return m.EID
	}
	return nil
}

type DeviceLispDetails struct {
	LispMapServers         []*MapServer `protobuf:"bytes,1,rep,name=LispMapServers,proto3" json:"LispMapServers,omitempty"`
	LispInstance           uint32       `protobuf:"varint,2,opt,name=LispInstance,proto3" json:"LispInstance,omitempty"`
	EID                    string       `protobuf:"bytes,4,opt,name=EID,proto3" json:"EID,omitempty"`
	EIDHashLen             uint32       `protobuf:"varint,5,opt,name=EIDHashLen,proto3" json:"EIDHashLen,omitempty"`
	ZedServers             []*ZedServer `protobuf:"bytes,6,rep,name=ZedServers,proto3" json:"ZedServers,omitempty"`
	EidAllocationPrefix    []byte       `protobuf:"bytes,8,opt,name=EidAllocationPrefix,proto3" json:"EidAllocationPrefix,omitempty"`
	EidAllocationPrefixLen uint32       `protobuf:"varint,9,opt,name=EidAllocationPrefixLen,proto3" json:"EidAllocationPrefixLen,omitempty"`
	ClientAddr             string       `protobuf:"bytes,10,opt,name=ClientAddr,proto3" json:"ClientAddr,omitempty"`
	Experimental           bool         `protobuf:"varint,20,opt,name=Experimental,proto3" json:"Experimental,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}     `json:"-"`
	XXX_unrecognized       []byte       `json:"-"`
	XXX_sizecache          int32        `json:"-"`
}

func (m *DeviceLispDetails) Reset()         { *m = DeviceLispDetails{} }
func (m *DeviceLispDetails) String() string { return proto.CompactTextString(m) }
func (*DeviceLispDetails) ProtoMessage()    {}
func (*DeviceLispDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc17241cd6d97458, []int{2}
}

func (m *DeviceLispDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceLispDetails.Unmarshal(m, b)
}
func (m *DeviceLispDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceLispDetails.Marshal(b, m, deterministic)
}
func (m *DeviceLispDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceLispDetails.Merge(m, src)
}
func (m *DeviceLispDetails) XXX_Size() int {
	return xxx_messageInfo_DeviceLispDetails.Size(m)
}
func (m *DeviceLispDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceLispDetails.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceLispDetails proto.InternalMessageInfo

func (m *DeviceLispDetails) GetLispMapServers() []*MapServer {
	if m != nil {
		return m.LispMapServers
	}
	return nil
}

func (m *DeviceLispDetails) GetLispInstance() uint32 {
	if m != nil {
		return m.LispInstance
	}
	return 0
}

func (m *DeviceLispDetails) GetEID() string {
	if m != nil {
		return m.EID
	}
	return ""
}

func (m *DeviceLispDetails) GetEIDHashLen() uint32 {
	if m != nil {
		return m.EIDHashLen
	}
	return 0
}

func (m *DeviceLispDetails) GetZedServers() []*ZedServer {
	if m != nil {
		return m.ZedServers
	}
	return nil
}

func (m *DeviceLispDetails) GetEidAllocationPrefix() []byte {
	if m != nil {
		return m.EidAllocationPrefix
	}
	return nil
}

func (m *DeviceLispDetails) GetEidAllocationPrefixLen() uint32 {
	if m != nil {
		return m.EidAllocationPrefixLen
	}
	return 0
}

func (m *DeviceLispDetails) GetClientAddr() string {
	if m != nil {
		return m.ClientAddr
	}
	return ""
}

func (m *DeviceLispDetails) GetExperimental() bool {
	if m != nil {
		return m.Experimental
	}
	return false
}

// Device Operational Commands Semantic
// For rebooting device,  command=Reset, counter = counter+delta, desiredState = on
// For poweroff device,  command=Reset, counter = counter+delta, desiredState = off
// For backup at midnight, command=Backup, counter = counter+delta, desiredState=n/a, opsTime = mm/dd/yy:hh:ss
// Current implementation does support only single command outstanding for each type
// In future can be extended to have more scheduled events
//
type DeviceOpsCmd struct {
	Counter      uint32 `protobuf:"varint,2,opt,name=counter,proto3" json:"counter,omitempty"`
	DesiredState bool   `protobuf:"varint,3,opt,name=desiredState,proto3" json:"desiredState,omitempty"`
	// FIXME: change to timestamp, once we move to gogo proto
	OpsTime              string   `protobuf:"bytes,4,opt,name=opsTime,proto3" json:"opsTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceOpsCmd) Reset()         { *m = DeviceOpsCmd{} }
func (m *DeviceOpsCmd) String() string { return proto.CompactTextString(m) }
func (*DeviceOpsCmd) ProtoMessage()    {}
func (*DeviceOpsCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc17241cd6d97458, []int{3}
}

func (m *DeviceOpsCmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceOpsCmd.Unmarshal(m, b)
}
func (m *DeviceOpsCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceOpsCmd.Marshal(b, m, deterministic)
}
func (m *DeviceOpsCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceOpsCmd.Merge(m, src)
}
func (m *DeviceOpsCmd) XXX_Size() int {
	return xxx_messageInfo_DeviceOpsCmd.Size(m)
}
func (m *DeviceOpsCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceOpsCmd.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceOpsCmd proto.InternalMessageInfo

func (m *DeviceOpsCmd) GetCounter() uint32 {
	if m != nil {
		return m.Counter
	}
	return 0
}

func (m *DeviceOpsCmd) GetDesiredState() bool {
	if m != nil {
		return m.DesiredState
	}
	return false
}

func (m *DeviceOpsCmd) GetOpsTime() string {
	if m != nil {
		return m.OpsTime
	}
	return ""
}

type SWAdapterParams struct {
	AType SWAdapterType `protobuf:"varint,1,opt,name=aType,proto3,enum=SWAdapterType" json:"aType,omitempty"`
	// vlan
	UnderlayInterface string `protobuf:"bytes,8,opt,name=underlayInterface,proto3" json:"underlayInterface,omitempty"`
	VlanId            uint32 `protobuf:"varint,9,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
	// OR : repeated physical interfaces for bond0
	Bondgroup            []string `protobuf:"bytes,10,rep,name=bondgroup,proto3" json:"bondgroup,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SWAdapterParams) Reset()         { *m = SWAdapterParams{} }
func (m *SWAdapterParams) String() string { return proto.CompactTextString(m) }
func (*SWAdapterParams) ProtoMessage()    {}
func (*SWAdapterParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc17241cd6d97458, []int{4}
}

func (m *SWAdapterParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SWAdapterParams.Unmarshal(m, b)
}
func (m *SWAdapterParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SWAdapterParams.Marshal(b, m, deterministic)
}
func (m *SWAdapterParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SWAdapterParams.Merge(m, src)
}
func (m *SWAdapterParams) XXX_Size() int {
	return xxx_messageInfo_SWAdapterParams.Size(m)
}
func (m *SWAdapterParams) XXX_DiscardUnknown() {
	xxx_messageInfo_SWAdapterParams.DiscardUnknown(m)
}

var xxx_messageInfo_SWAdapterParams proto.InternalMessageInfo

func (m *SWAdapterParams) GetAType() SWAdapterType {
	if m != nil {
		return m.AType
	}
	return SWAdapterType_IGNORE
}

func (m *SWAdapterParams) GetUnderlayInterface() string {
	if m != nil {
		return m.UnderlayInterface
	}
	return ""
}

func (m *SWAdapterParams) GetVlanId() uint32 {
	if m != nil {
		return m.VlanId
	}
	return 0
}

func (m *SWAdapterParams) GetBondgroup() []string {
	if m != nil {
		return m.Bondgroup
	}
	return nil
}

type SystemAdapter struct {
	// name of the adapter; hardware-specific e.g., eth0
	Name         string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AllocDetails *SWAdapterParams `protobuf:"bytes,20,opt,name=allocDetails,proto3" json:"allocDetails,omitempty"`
	// this is part of the freelink group
	FreeUplink bool `protobuf:"varint,2,opt,name=freeUplink,proto3" json:"freeUplink,omitempty"`
	// this is part of the uplink group
	Uplink bool `protobuf:"varint,3,opt,name=uplink,proto3" json:"uplink,omitempty"`
	// attach this network config for this adapter
	NetworkUUID string `protobuf:"bytes,4,opt,name=networkUUID,proto3" json:"networkUUID,omitempty"`
	// if its static network we need ip address
	Addr string `protobuf:"bytes,5,opt,name=addr,proto3" json:"addr,omitempty"`
	// alias/logical name which will be reported to zedcloud
	// and used for app instances
	LogicalName          string   `protobuf:"bytes,6,opt,name=logicalName,proto3" json:"logicalName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SystemAdapter) Reset()         { *m = SystemAdapter{} }
func (m *SystemAdapter) String() string { return proto.CompactTextString(m) }
func (*SystemAdapter) ProtoMessage()    {}
func (*SystemAdapter) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc17241cd6d97458, []int{5}
}

func (m *SystemAdapter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemAdapter.Unmarshal(m, b)
}
func (m *SystemAdapter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemAdapter.Marshal(b, m, deterministic)
}
func (m *SystemAdapter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemAdapter.Merge(m, src)
}
func (m *SystemAdapter) XXX_Size() int {
	return xxx_messageInfo_SystemAdapter.Size(m)
}
func (m *SystemAdapter) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemAdapter.DiscardUnknown(m)
}

var xxx_messageInfo_SystemAdapter proto.InternalMessageInfo

func (m *SystemAdapter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SystemAdapter) GetAllocDetails() *SWAdapterParams {
	if m != nil {
		return m.AllocDetails
	}
	return nil
}

func (m *SystemAdapter) GetFreeUplink() bool {
	if m != nil {
		return m.FreeUplink
	}
	return false
}

func (m *SystemAdapter) GetUplink() bool {
	if m != nil {
		return m.Uplink
	}
	return false
}

func (m *SystemAdapter) GetNetworkUUID() string {
	if m != nil {
		return m.NetworkUUID
	}
	return ""
}

func (m *SystemAdapter) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *SystemAdapter) GetLogicalName() string {
	if m != nil {
		return m.LogicalName
	}
	return ""
}

type EdgeDevConfig struct {
	Id                 *UUIDandVersion          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DevConfigSha256    []byte                   `protobuf:"bytes,2,opt,name=devConfigSha256,proto3" json:"devConfigSha256,omitempty"`
	DevConfigSignature []byte                   `protobuf:"bytes,3,opt,name=devConfigSignature,proto3" json:"devConfigSignature,omitempty"`
	Apps               []*AppInstanceConfig     `protobuf:"bytes,4,rep,name=apps,proto3" json:"apps,omitempty"`
	Networks           []*NetworkConfig         `protobuf:"bytes,5,rep,name=networks,proto3" json:"networks,omitempty"`
	Datastores         []*DatastoreConfig       `protobuf:"bytes,6,rep,name=datastores,proto3" json:"datastores,omitempty"`
	LispInfo           *DeviceLispDetails       `protobuf:"bytes,7,opt,name=lispInfo,proto3" json:"lispInfo,omitempty"`
	Base               []*BaseOSConfig          `protobuf:"bytes,8,rep,name=base,proto3" json:"base,omitempty"`
	Reboot             *DeviceOpsCmd            `protobuf:"bytes,9,opt,name=reboot,proto3" json:"reboot,omitempty"`
	Backup             *DeviceOpsCmd            `protobuf:"bytes,10,opt,name=backup,proto3" json:"backup,omitempty"`
	ConfigItems        []*ConfigItem            `protobuf:"bytes,11,rep,name=configItems,proto3" json:"configItems,omitempty"`
	SystemAdapterList  []*SystemAdapter         `protobuf:"bytes,12,rep,name=systemAdapterList,proto3" json:"systemAdapterList,omitempty"`
	Services           []*ServiceInstanceConfig `protobuf:"bytes,13,rep,name=services,proto3" json:"services,omitempty"`
	// Override dmidecode info if set
	Manufacturer     string                   `protobuf:"bytes,14,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	ProductName      string                   `protobuf:"bytes,15,opt,name=productName,proto3" json:"productName,omitempty"`
	NetworkInstances []*NetworkInstanceConfig `protobuf:"bytes,16,rep,name=networkInstances,proto3" json:"networkInstances,omitempty"`
	// Information saved in /config to make it easier find a device in EV-C
	Enterprise           string   `protobuf:"bytes,17,opt,name=enterprise,proto3" json:"enterprise,omitempty"`
	Name                 string   `protobuf:"bytes,18,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EdgeDevConfig) Reset()         { *m = EdgeDevConfig{} }
func (m *EdgeDevConfig) String() string { return proto.CompactTextString(m) }
func (*EdgeDevConfig) ProtoMessage()    {}
func (*EdgeDevConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc17241cd6d97458, []int{6}
}

func (m *EdgeDevConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdgeDevConfig.Unmarshal(m, b)
}
func (m *EdgeDevConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdgeDevConfig.Marshal(b, m, deterministic)
}
func (m *EdgeDevConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdgeDevConfig.Merge(m, src)
}
func (m *EdgeDevConfig) XXX_Size() int {
	return xxx_messageInfo_EdgeDevConfig.Size(m)
}
func (m *EdgeDevConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EdgeDevConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EdgeDevConfig proto.InternalMessageInfo

func (m *EdgeDevConfig) GetId() *UUIDandVersion {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *EdgeDevConfig) GetDevConfigSha256() []byte {
	if m != nil {
		return m.DevConfigSha256
	}
	return nil
}

func (m *EdgeDevConfig) GetDevConfigSignature() []byte {
	if m != nil {
		return m.DevConfigSignature
	}
	return nil
}

func (m *EdgeDevConfig) GetApps() []*AppInstanceConfig {
	if m != nil {
		return m.Apps
	}
	return nil
}

func (m *EdgeDevConfig) GetNetworks() []*NetworkConfig {
	if m != nil {
		return m.Networks
	}
	return nil
}

func (m *EdgeDevConfig) GetDatastores() []*DatastoreConfig {
	if m != nil {
		return m.Datastores
	}
	return nil
}

func (m *EdgeDevConfig) GetLispInfo() *DeviceLispDetails {
	if m != nil {
		return m.LispInfo
	}
	return nil
}

func (m *EdgeDevConfig) GetBase() []*BaseOSConfig {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *EdgeDevConfig) GetReboot() *DeviceOpsCmd {
	if m != nil {
		return m.Reboot
	}
	return nil
}

func (m *EdgeDevConfig) GetBackup() *DeviceOpsCmd {
	if m != nil {
		return m.Backup
	}
	return nil
}

func (m *EdgeDevConfig) GetConfigItems() []*ConfigItem {
	if m != nil {
		return m.ConfigItems
	}
	return nil
}

func (m *EdgeDevConfig) GetSystemAdapterList() []*SystemAdapter {
	if m != nil {
		return m.SystemAdapterList
	}
	return nil
}

func (m *EdgeDevConfig) GetServices() []*ServiceInstanceConfig {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *EdgeDevConfig) GetManufacturer() string {
	if m != nil {
		return m.Manufacturer
	}
	return ""
}

func (m *EdgeDevConfig) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *EdgeDevConfig) GetNetworkInstances() []*NetworkInstanceConfig {
	if m != nil {
		return m.NetworkInstances
	}
	return nil
}

func (m *EdgeDevConfig) GetEnterprise() string {
	if m != nil {
		return m.Enterprise
	}
	return ""
}

func (m *EdgeDevConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Timers and other per-device policy which relates to the interaction
// with zedcloud. Note that the timers are randomized on the device
// to avoid synchronization with other devices. Random range is between
// between .5 and 1.5 of these nominal values. If not set (i.e. zero),
// it means the default value of 60 seconds.
type ConfigItem struct {
	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Below section will be deprecated
	//
	// Types that are valid to be assigned to ConfigItemValue:
	//	*ConfigItem_BoolValue
	//	*ConfigItem_Uint32Value
	//	*ConfigItem_Uint64Value
	//	*ConfigItem_FloatValue
	//	*ConfigItem_StringValue
	ConfigItemValue      isConfigItem_ConfigItemValue `protobuf_oneof:"configItemValue"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ConfigItem) Reset()         { *m = ConfigItem{} }
func (m *ConfigItem) String() string { return proto.CompactTextString(m) }
func (*ConfigItem) ProtoMessage()    {}
func (*ConfigItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc17241cd6d97458, []int{7}
}

func (m *ConfigItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigItem.Unmarshal(m, b)
}
func (m *ConfigItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigItem.Marshal(b, m, deterministic)
}
func (m *ConfigItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigItem.Merge(m, src)
}
func (m *ConfigItem) XXX_Size() int {
	return xxx_messageInfo_ConfigItem.Size(m)
}
func (m *ConfigItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigItem.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigItem proto.InternalMessageInfo

func (m *ConfigItem) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ConfigItem) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type isConfigItem_ConfigItemValue interface {
	isConfigItem_ConfigItemValue()
}

type ConfigItem_BoolValue struct {
	BoolValue bool `protobuf:"varint,3,opt,name=boolValue,proto3,oneof"`
}

type ConfigItem_Uint32Value struct {
	Uint32Value uint32 `protobuf:"varint,4,opt,name=uint32Value,proto3,oneof"`
}

type ConfigItem_Uint64Value struct {
	Uint64Value uint64 `protobuf:"varint,5,opt,name=uint64Value,proto3,oneof"`
}

type ConfigItem_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,6,opt,name=floatValue,proto3,oneof"`
}

type ConfigItem_StringValue struct {
	StringValue string `protobuf:"bytes,7,opt,name=stringValue,proto3,oneof"`
}

func (*ConfigItem_BoolValue) isConfigItem_ConfigItemValue() {}

func (*ConfigItem_Uint32Value) isConfigItem_ConfigItemValue() {}

func (*ConfigItem_Uint64Value) isConfigItem_ConfigItemValue() {}

func (*ConfigItem_FloatValue) isConfigItem_ConfigItemValue() {}

func (*ConfigItem_StringValue) isConfigItem_ConfigItemValue() {}

func (m *ConfigItem) GetConfigItemValue() isConfigItem_ConfigItemValue {
	if m != nil {
		return m.ConfigItemValue
	}
	return nil
}

func (m *ConfigItem) GetBoolValue() bool {
	if x, ok := m.GetConfigItemValue().(*ConfigItem_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (m *ConfigItem) GetUint32Value() uint32 {
	if x, ok := m.GetConfigItemValue().(*ConfigItem_Uint32Value); ok {
		return x.Uint32Value
	}
	return 0
}

func (m *ConfigItem) GetUint64Value() uint64 {
	if x, ok := m.GetConfigItemValue().(*ConfigItem_Uint64Value); ok {
		return x.Uint64Value
	}
	return 0
}

func (m *ConfigItem) GetFloatValue() float32 {
	if x, ok := m.GetConfigItemValue().(*ConfigItem_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (m *ConfigItem) GetStringValue() string {
	if x, ok := m.GetConfigItemValue().(*ConfigItem_StringValue); ok {
		return x.StringValue
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ConfigItem) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ConfigItem_BoolValue)(nil),
		(*ConfigItem_Uint32Value)(nil),
		(*ConfigItem_Uint64Value)(nil),
		(*ConfigItem_FloatValue)(nil),
		(*ConfigItem_StringValue)(nil),
	}
}

type ConfigRequest struct {
	ConfigHash           string   `protobuf:"bytes,1,opt,name=configHash,proto3" json:"configHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigRequest) Reset()         { *m = ConfigRequest{} }
func (m *ConfigRequest) String() string { return proto.CompactTextString(m) }
func (*ConfigRequest) ProtoMessage()    {}
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc17241cd6d97458, []int{8}
}

func (m *ConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigRequest.Unmarshal(m, b)
}
func (m *ConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigRequest.Marshal(b, m, deterministic)
}
func (m *ConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigRequest.Merge(m, src)
}
func (m *ConfigRequest) XXX_Size() int {
	return xxx_messageInfo_ConfigRequest.Size(m)
}
func (m *ConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigRequest proto.InternalMessageInfo

func (m *ConfigRequest) GetConfigHash() string {
	if m != nil {
		return m.ConfigHash
	}
	return ""
}

type ConfigResponse struct {
	Config               *EdgeDevConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	ConfigHash           string         `protobuf:"bytes,2,opt,name=configHash,proto3" json:"configHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ConfigResponse) Reset()         { *m = ConfigResponse{} }
func (m *ConfigResponse) String() string { return proto.CompactTextString(m) }
func (*ConfigResponse) ProtoMessage()    {}
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc17241cd6d97458, []int{9}
}

func (m *ConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigResponse.Unmarshal(m, b)
}
func (m *ConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigResponse.Marshal(b, m, deterministic)
}
func (m *ConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigResponse.Merge(m, src)
}
func (m *ConfigResponse) XXX_Size() int {
	return xxx_messageInfo_ConfigResponse.Size(m)
}
func (m *ConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigResponse proto.InternalMessageInfo

func (m *ConfigResponse) GetConfig() *EdgeDevConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *ConfigResponse) GetConfigHash() string {
	if m != nil {
		return m.ConfigHash
	}
	return ""
}

func init() {
	proto.RegisterEnum("SWAdapterType", SWAdapterType_name, SWAdapterType_value)
	proto.RegisterType((*MapServer)(nil), "MapServer")
	proto.RegisterType((*ZedServer)(nil), "ZedServer")
	proto.RegisterType((*DeviceLispDetails)(nil), "DeviceLispDetails")
	proto.RegisterType((*DeviceOpsCmd)(nil), "DeviceOpsCmd")
	proto.RegisterType((*SWAdapterParams)(nil), "sWAdapterParams")
	proto.RegisterType((*SystemAdapter)(nil), "SystemAdapter")
	proto.RegisterType((*EdgeDevConfig)(nil), "EdgeDevConfig")
	proto.RegisterType((*ConfigItem)(nil), "ConfigItem")
	proto.RegisterType((*ConfigRequest)(nil), "ConfigRequest")
	proto.RegisterType((*ConfigResponse)(nil), "ConfigResponse")
}

func init() { proto.RegisterFile("devconfig.proto", fileDescriptor_fc17241cd6d97458) }

var fileDescriptor_fc17241cd6d97458 = []byte{
	// 1126 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x56, 0x5f, 0x6f, 0xdb, 0x36,
	0x10, 0x8f, 0x1d, 0xc7, 0xb5, 0xcf, 0x7f, 0xe2, 0x70, 0x45, 0x21, 0x14, 0x43, 0xeb, 0x19, 0xdd,
	0x10, 0x14, 0x9b, 0x5c, 0xb8, 0x5d, 0x81, 0x01, 0x7b, 0x49, 0xe2, 0xa0, 0x31, 0x90, 0x25, 0x85,
	0xd2, 0x76, 0x43, 0xdf, 0x18, 0xe9, 0xec, 0x12, 0x91, 0x49, 0x8d, 0xa4, 0xbc, 0xa6, 0x9f, 0x62,
	0xef, 0xfb, 0x84, 0xfb, 0x00, 0xc3, 0x5e, 0x07, 0xfe, 0x91, 0x2c, 0x3b, 0xd9, 0x1b, 0xef, 0xf7,
	0xfb, 0xf1, 0x74, 0x3c, 0xde, 0x1d, 0x05, 0xfb, 0x09, 0xae, 0x62, 0xc1, 0xe7, 0x6c, 0x11, 0x66,
	0x52, 0x68, 0xf1, 0xd8, 0x01, 0xcb, 0xa5, 0xe0, 0x05, 0x40, 0xb3, 0x6c, 0x43, 0x41, 0xae, 0xa9,
	0x42, 0xa1, 0x36, 0x77, 0x71, 0xd4, 0x1b, 0x40, 0x4f, 0x69, 0x21, 0xe9, 0x02, 0x4b, 0x13, 0xe5,
	0x8a, 0xc5, 0xa5, 0xc9, 0x51, 0x33, 0xae, 0xb4, 0x33, 0x47, 0x6f, 0xa0, 0xfd, 0x0b, 0xcd, 0xae,
	0x50, 0xae, 0x50, 0x92, 0xc7, 0xd0, 0xba, 0xa0, 0x4b, 0xbc, 0x94, 0xb3, 0x2c, 0xa8, 0x0d, 0x6b,
	0x87, 0xed, 0xa8, 0xb4, 0xc9, 0x13, 0x80, 0x13, 0x89, 0x09, 0x72, 0xcd, 0x68, 0x1a, 0xd4, 0x2d,
	0x5b, 0x41, 0x46, 0x3f, 0x41, 0xfb, 0x23, 0x26, 0x6b, 0x47, 0x67, 0x42, 0x69, 0xb3, 0xb9, 0x70,
	0x54, 0xd8, 0x64, 0x00, 0xbb, 0xa7, 0xb3, 0x69, 0x50, 0x1f, 0xee, 0x1e, 0xb6, 0x23, 0xb3, 0x1c,
	0xfd, 0x5b, 0x87, 0x83, 0x29, 0x9a, 0x18, 0xcf, 0x99, 0xca, 0xa6, 0xa8, 0x29, 0x4b, 0x15, 0x99,
	0x40, 0xdf, 0x98, 0x65, 0x74, 0x2a, 0xa8, 0x0d, 0x77, 0x0f, 0x3b, 0x13, 0x08, 0x4b, 0x28, 0xda,
	0x52, 0x90, 0x11, 0x74, 0x0d, 0x32, 0xe3, 0x4a, 0x53, 0x1e, 0xa3, 0x0d, 0xb3, 0x17, 0x6d, 0x60,
	0xc5, 0xf7, 0x1b, 0x36, 0x2c, 0xb3, 0x34, 0x47, 0x3b, 0x9d, 0x4d, 0xcf, 0xa8, 0xfa, 0x74, 0x8e,
	0x3c, 0xd8, 0xb3, 0x7b, 0x2a, 0x08, 0x79, 0x0e, 0x50, 0x1e, 0x4d, 0x05, 0x4d, 0x1f, 0x45, 0x09,
	0x45, 0x15, 0x96, 0xbc, 0x80, 0xaf, 0x4e, 0x59, 0x72, 0x94, 0xa6, 0x22, 0xa6, 0x9a, 0x09, 0xfe,
	0x56, 0xe2, 0x9c, 0x7d, 0x0e, 0x5a, 0xc3, 0xda, 0x61, 0x37, 0xba, 0x8f, 0x22, 0xaf, 0xe1, 0xd1,
	0x3d, 0xb0, 0x89, 0xa4, 0x6d, 0x23, 0xf9, 0x1f, 0xd6, 0x5e, 0x48, 0xca, 0x90, 0xeb, 0xa3, 0x24,
	0x91, 0x01, 0xf8, 0x0b, 0x29, 0x11, 0x93, 0x8b, 0xd3, 0xcf, 0x19, 0x4a, 0xb6, 0x44, 0xae, 0x69,
	0x1a, 0x3c, 0x1c, 0xd6, 0x0e, 0x5b, 0xd1, 0x06, 0x36, 0x9a, 0x43, 0xd7, 0x25, 0xfe, 0x32, 0x53,
	0x27, 0xcb, 0x84, 0x04, 0xf0, 0x20, 0x16, 0x39, 0xd7, 0x28, 0x7d, 0xea, 0x0a, 0xd3, 0x78, 0x4b,
	0x50, 0x31, 0x89, 0xc9, 0x95, 0xa6, 0x1a, 0x83, 0x5d, 0xe7, 0xad, 0x8a, 0x99, 0xdd, 0x22, 0x53,
	0xef, 0xd8, 0x12, 0x7d, 0x76, 0x0b, 0x73, 0xf4, 0x57, 0x0d, 0xf6, 0xd5, 0xaf, 0x47, 0x09, 0xcd,
	0x34, 0xca, 0xb7, 0x54, 0xd2, 0xa5, 0x22, 0xcf, 0x60, 0x8f, 0xbe, 0xbb, 0xcd, 0x5c, 0x81, 0xf4,
	0x27, 0xfd, 0xb0, 0x14, 0x18, 0x34, 0x72, 0x24, 0xf9, 0x1e, 0x0e, 0x72, 0x9e, 0xa0, 0x4c, 0xe9,
	0xed, 0xcc, 0x04, 0x32, 0xa7, 0x31, 0xda, 0x6c, 0xb6, 0xa3, 0xbb, 0x04, 0x79, 0x04, 0xcd, 0x55,
	0x4a, 0xf9, 0x2c, 0xf1, 0xb9, 0xf3, 0x16, 0xf9, 0x1a, 0xda, 0xd7, 0x82, 0x27, 0x0b, 0x29, 0xf2,
	0x2c, 0x00, 0x5b, 0x79, 0x6b, 0x60, 0xf4, 0x77, 0x0d, 0x7a, 0x57, 0xb7, 0x4a, 0xe3, 0xd2, 0x07,
	0x40, 0x08, 0x34, 0xf8, 0xba, 0x76, 0xed, 0x9a, 0xbc, 0x82, 0x2e, 0x35, 0xd7, 0xe0, 0xeb, 0xd3,
	0xe6, 0xb3, 0x33, 0x19, 0x84, 0x5b, 0xe7, 0x8a, 0x36, 0x54, 0xe6, 0x96, 0xe6, 0x12, 0xf1, 0x7d,
	0x96, 0x32, 0x7e, 0x63, 0x93, 0xda, 0x8a, 0x2a, 0x88, 0x89, 0x38, 0x77, 0x9c, 0xcb, 0xa8, 0xb7,
	0xc8, 0x10, 0x3a, 0x1c, 0xf5, 0x1f, 0x42, 0xde, 0xbc, 0x7f, 0x5f, 0x56, 0x6b, 0x15, 0x32, 0x31,
	0x52, 0x73, 0xf3, 0x7b, 0x2e, 0x46, 0xb3, 0x36, 0xbb, 0x52, 0xb1, 0x60, 0x31, 0x4d, 0x6d, 0xeb,
	0x35, 0xdd, 0xae, 0x0a, 0x34, 0xfa, 0xb3, 0x09, 0xbd, 0xd3, 0x64, 0x81, 0x53, 0x5c, 0x9d, 0xd8,
	0xa1, 0x41, 0x9e, 0x42, 0x9d, 0x25, 0xf6, 0xa4, 0x9d, 0xc9, 0x7e, 0x68, 0x5c, 0x53, 0x9e, 0x7c,
	0x40, 0xa9, 0x98, 0xe0, 0x51, 0x9d, 0x25, 0xe4, 0xd0, 0x4e, 0x2a, 0xa7, 0xbe, 0xfa, 0x44, 0x27,
	0x3f, 0xbe, 0xb6, 0xe7, 0xe8, 0x46, 0xdb, 0x30, 0x09, 0x81, 0xac, 0x21, 0xb6, 0xe0, 0x54, 0xe7,
	0xd2, 0x95, 0x4a, 0x37, 0xba, 0x87, 0x21, 0xdf, 0x41, 0x83, 0x66, 0x99, 0x0a, 0x1a, 0xb6, 0xa5,
	0x48, 0x78, 0x94, 0x95, 0x6d, 0xea, 0xa4, 0x91, 0xe5, 0xc9, 0x73, 0x68, 0xf9, 0x93, 0xab, 0x60,
	0xcf, 0x6a, 0xfb, 0xe1, 0x85, 0x03, 0xbc, 0xae, 0xe4, 0xc9, 0x0b, 0x80, 0x84, 0x6a, 0x6a, 0x66,
	0x20, 0x16, 0xcd, 0x3a, 0x08, 0xa7, 0x05, 0xe4, 0xf5, 0x15, 0x0d, 0x09, 0xa1, 0x95, 0xda, 0x01,
	0x31, 0x17, 0xc1, 0x03, 0x9b, 0x06, 0x12, 0xde, 0x19, 0x47, 0x51, 0xa9, 0x21, 0xdf, 0x40, 0xc3,
	0x8c, 0xe1, 0xa0, 0x65, 0x7d, 0xf7, 0xc2, 0x63, 0xaa, 0xf0, 0xf2, 0xaa, 0x08, 0xd8, 0x50, 0xe4,
	0x5b, 0x68, 0x4a, 0xbc, 0x16, 0x42, 0xdb, 0x3a, 0x34, 0xa2, 0x6a, 0x9b, 0x45, 0x9e, 0x34, 0xb2,
	0x6b, 0x1a, 0xdf, 0xd8, 0x9a, 0xbc, 0x4f, 0xe6, 0x48, 0xf2, 0x03, 0x74, 0xdc, 0x80, 0x9f, 0x69,
	0x5c, 0xaa, 0xa0, 0x63, 0xbf, 0xdb, 0x09, 0x4f, 0x4a, 0x2c, 0xaa, 0xf2, 0xe4, 0x67, 0x38, 0x50,
	0xd5, 0x6a, 0x3e, 0x67, 0x4a, 0x07, 0x5d, 0x9f, 0xb6, 0x8d, 0x3a, 0x8f, 0xee, 0x0a, 0xc9, 0x04,
	0x5a, 0xfe, 0xc1, 0x50, 0x41, 0xcf, 0x6e, 0x7a, 0x14, 0x5e, 0x39, 0x60, 0xeb, 0x6e, 0x4a, 0x9d,
	0x19, 0x0e, 0x4b, 0xca, 0xf3, 0x39, 0x8d, 0xcd, 0xb5, 0xca, 0xa0, 0x6f, 0xeb, 0x6e, 0x03, 0x33,
	0xa5, 0x99, 0x49, 0x91, 0xe4, 0xb1, 0x7b, 0x15, 0xf6, 0x5d, 0x69, 0x56, 0x20, 0x72, 0x0c, 0x03,
	0x7f, 0x8b, 0xc5, 0x87, 0x54, 0x30, 0xf0, 0x11, 0x5c, 0x6c, 0x12, 0x3e, 0x82, 0x3b, 0x7a, 0xd3,
	0x6e, 0x68, 0xa6, 0x41, 0x26, 0x99, 0xc2, 0xe0, 0xc0, 0x0d, 0xc5, 0x35, 0x52, 0x36, 0x36, 0x59,
	0x37, 0xf6, 0xe8, 0x9f, 0x1a, 0xc0, 0x3a, 0x97, 0xe6, 0x7d, 0xb8, 0xc1, 0x5b, 0xdf, 0xfa, 0x66,
	0x49, 0x1e, 0xc2, 0xde, 0x8a, 0xa6, 0x39, 0xfa, 0x57, 0xcf, 0x19, 0xe4, 0x89, 0x99, 0x29, 0x22,
	0xfd, 0x60, 0x19, 0xdb, 0xbc, 0x67, 0x3b, 0xd1, 0x1a, 0x22, 0x23, 0xe8, 0xe4, 0x8c, 0xeb, 0x97,
	0x13, 0xa7, 0x30, 0x1d, 0xdc, 0x3b, 0xdb, 0x89, 0xaa, 0x60, 0xa1, 0x79, 0xfd, 0xca, 0x69, 0x4c,
	0x2b, 0x37, 0x0a, 0x8d, 0x07, 0xc9, 0x10, 0x60, 0x9e, 0x0a, 0xaa, 0x9d, 0xc4, 0xb4, 0x74, 0xfd,
	0x6c, 0x27, 0xaa, 0x60, 0xc6, 0x8b, 0xd2, 0x92, 0xf1, 0x85, 0x93, 0x98, 0x1a, 0x6e, 0x1b, 0x2f,
	0x15, 0xf0, 0xf8, 0x00, 0xf6, 0xd7, 0x35, 0x62, 0xa1, 0xd1, 0x18, 0x7a, 0x3e, 0x8f, 0xf8, 0x7b,
	0x8e, 0x4a, 0x9b, 0xe4, 0x39, 0x8d, 0x79, 0xf8, 0x7c, 0x02, 0x2a, 0xc8, 0xe8, 0x37, 0xe8, 0x17,
	0x1b, 0x54, 0x26, 0xb8, 0x32, 0x0d, 0xdc, 0x74, 0xbc, 0x9f, 0x1f, 0xfd, 0x70, 0x63, 0xb6, 0x44,
	0x9e, 0xdd, 0xf2, 0x5c, 0xdf, 0xf6, 0xfc, 0x7c, 0x0c, 0xbd, 0x8d, 0xe9, 0x4f, 0x00, 0x9a, 0xb3,
	0x37, 0x17, 0x97, 0xd1, 0xe9, 0x60, 0x87, 0xb4, 0xa0, 0xf1, 0xe1, 0xfc, 0xe8, 0x62, 0x50, 0x33,
	0xab, 0xe3, 0xcb, 0x8b, 0xe9, 0xa0, 0x7e, 0xfc, 0x06, 0x9e, 0xc6, 0x62, 0x19, 0x7e, 0xc1, 0x04,
	0x13, 0x1a, 0xc6, 0xa9, 0xc8, 0x93, 0x30, 0xdf, 0xf8, 0xd1, 0xf9, 0xf8, 0x6c, 0xc1, 0xf4, 0xa7,
	0xfc, 0x3a, 0x8c, 0xc5, 0x72, 0xec, 0x74, 0x63, 0x5c, 0xe1, 0x58, 0x25, 0x37, 0xe3, 0x85, 0x18,
	0x7f, 0x71, 0x5f, 0xbf, 0x6e, 0x5a, 0xf1, 0xcb, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x02,
	0x9f, 0x73, 0x8d, 0x09, 0x00, 0x00,
}
