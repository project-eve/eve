# Copyright (c) 2018 Zededa, Inc.
# SPDX-License-Identifier: Apache-2.0
FROM LISP_TAG as lisp
FROM XENTOOLS_TAG as xen-tools
FROM DNSMASQ_TAG as dnsmasq
FROM STRONGSWAN_TAG as strongswan
FROM GPTTOOLS_TAG as gpttools
FROM WATCHDOG_TAG as watchdog
FROM golang:1.9.1-alpine AS build
RUN apk update
RUN apk add --no-cache git gcc linux-headers libc-dev util-linux libpcap-dev

# These three are supporting rudimentary cross-build capabilities.
# The only one supported so far is cross compiling for aarch64 on x86
ENV CGO_ENABLED=1
ARG GOARCH=
ARG CROSS_GCC=https://musl.cc/aarch64-linux-musleabi-cross.tgz
RUN [ -z "$GOARCH" ] || (cd / ; apk add --no-cache wget && wget -O - $CROSS_GCC | tar xzvf -)

ADD ./  /go/src/github.com/zededa/eve/pkg/pillar/

# go install and go vet
RUN [ -z "$GOARCH" ] || export CC=$(echo /*-cross/bin/*-gcc)           ;\
    go install github.com/zededa/eve/pkg/pillar/zedbox/... && \
    echo "Running go vet" && go vet ./... && \
    echo "Running go fmt" && ERR=$(gofmt -e -l -s $(find . -name \*.go | grep -v /vendor/)) && \
       if [ -n "$ERR" ] ; then echo $ERR ; exit 1 ; fi && \
    if [ -f /go/bin/*/zedbox ] ; then mv /go/bin/*/zedbox /go/bin ; fi

FROM alpine:3.8
RUN apk add --no-cache \
    yajl xz bash openssl iptables ip6tables iproute2 dhcpcd \
    apk-cron coreutils dmidecode sudo libbz2 libuuid ipset \
    libaio logrotate pixman glib curl radvd perl ethtool \
    openssh-server util-linux e2fsprogs libcrypto1.0 xorriso \
    python libpcap libffi

# The following is for xen-tools
RUN [ `uname -m` = "aarch64" ] && apk add --no-cache libfdt || :

# FIXME: we really need to do a proper linuxkit sshd
RUN ssh-keygen -A ; echo PermitRootLogin yes >> /etc/ssh/sshd_config ; sed -ie '/^root/s#^.*$#root:$6$Ndt1G5AYZFQ8rz7m$7vGZMKKotSYxwxk/.jMfuOCzxw0I3DNedygaQaLF7kYSYsLqiBHhmc8RJSXp8/VxSYPpgYSz/8fkv0hO6I4js.:17477:0:::::#' /etc/shadow


# We have to make sure configs survive in some location, but they don't pollute
# the default /config (since that is expected to be an empty mount point)
ADD conf/root-certificate.pem conf/server conf/server.production /opt/zededa/examples/config/
ADD examples /opt/zededa/examples
ADD scripts/device-steps.sh \
    scripts/generate-device.sh \
    scripts/generate-self-signed.sh \
    scripts/handlezedserverconfig.sh \
    scripts/watchdog-report.sh \
  /opt/zededa/bin/
ADD conf/AssignableAdapters /var/tmp/zededa/AssignableAdapters
ADD conf/DeviceNetworkConfig /var/tmp/zededa/DeviceNetworkConfig
ADD conf/lisp.config.base /var/tmp/zededa/lisp.config.base

COPY --from=build /go/bin/* /opt/zededa/bin/
RUN for app in   \
      client domainmgr downloader hardwaremodel identitymgr ledmanager \
      logmanager verifier zedagent zedmanager zedrouter ipcmonitor nim \
      waitforaddr diag baseosmgr wstunnelclient conntrack lisp-ztr ;\
    do ln -s zedbox /opt/zededa/bin/$app ; done

COPY --from=xen-tools / /
COPY --from=lisp / /
COPY --from=gpttools / /
COPY --from=dnsmasq /usr/sbin/dnsmasq /opt/zededa/bin/dnsmasq
COPY --from=strongswan / /
COPY --from=watchdog /usr/sbin /usr/sbin

# And now a few local tweaks
COPY rootfs/ /
# logrotate requires restricted permissions
RUN chmod 644 /etc/logrotate.d/zededa

# FIXME: replace with tini+monit ASAP
CMD /init.sh
