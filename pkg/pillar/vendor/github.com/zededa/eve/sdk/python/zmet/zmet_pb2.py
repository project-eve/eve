# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: zmet.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='zmet.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\nzmet.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc9\x01\n\x11ZInfoManufacturer\x12\x14\n\x0cmanufacturer\x18\x01 \x01(\t\x12\x13\n\x0bproductName\x18\x02 \x01(\t\x12\x0f\n\x07version\x18\x03 \x01(\t\x12\x14\n\x0cserialNumber\x18\x04 \x01(\t\x12\x0c\n\x04UUID\x18\x05 \x01(\t\x12\x12\n\ncompatible\x18\x06 \x01(\t\x12\x12\n\nbiosVendor\x18\x07 \x01(\t\x12\x13\n\x0b\x62iosVersion\x18\x08 \x01(\t\x12\x17\n\x0f\x62iosReleaseDate\x18\t \x01(\t\"\xf8\x01\n\x0cZInfoNetwork\x12\x0f\n\x07macAddr\x18\x03 \x01(\t\x12\x0f\n\x07\x64\x65vName\x18\x04 \x01(\t\x12\x0f\n\x07IPAddrs\x18\x05 \x03(\t\x12\x16\n\x0e\x64\x65\x66\x61ultRouters\x18\x06 \x03(\t\x12\x16\n\x03\x64ns\x18\x07 \x01(\x0b\x32\t.ZInfoDNS\x12\n\n\x02up\x18\x08 \x01(\x08\x12\x19\n\x08location\x18\t \x01(\x0b\x32\x07.GeoLoc\x12\x0e\n\x06uplink\x18\n \x01(\x08\x12\x1e\n\nnetworkErr\x18\x0b \x01(\x0b\x32\n.ErrorInfo\x12\x11\n\tlocalName\x18\x0c \x01(\t\x12\x1b\n\x05proxy\x18\r \x01(\x0b\x32\x0c.ProxyStatus\"\x87\x01\n\x06GeoLoc\x12\x12\n\nUnderlayIP\x18\x01 \x01(\t\x12\x10\n\x08Hostname\x18\x02 \x01(\t\x12\x0c\n\x04\x43ity\x18\x03 \x01(\t\x12\x0e\n\x06Region\x18\x04 \x01(\t\x12\x0f\n\x07\x43ountry\x18\x05 \x01(\t\x12\x0b\n\x03Loc\x18\x06 \x01(\t\x12\x0b\n\x03Org\x18\x07 \x01(\t\x12\x0e\n\x06Postal\x18\x08 \x01(\t\"D\n\x08ZInfoDNS\x12\x12\n\nDNSservers\x18\x01 \x03(\t\x12\x11\n\tDNSdomain\x18\x02 \x01(\t\x12\x11\n\tDNSsearch\x18\x03 \x03(\t\"i\n\x0fZinfoPeripheral\x12 \n\x05ztype\x18\x01 \x01(\x0e\x32\x11.ZPeripheralTypes\x12\x11\n\tpluggable\x18\x02 \x01(\x08\x12!\n\x05minfo\x18\x03 \x01(\x0b\x32\x12.ZInfoManufacturer\"\x91\x01\n\x07ZInfoSW\x12\x11\n\tswVersion\x18\x02 \x01(\t\x12\x0e\n\x06swHash\x18\x03 \x01(\t\x12\x18\n\x05state\x18\x04 \x01(\x0e\x32\t.ZSwState\x12\x0e\n\x06target\x18\x06 \x01(\t\x12\x0c\n\x04vdev\x18\x07 \x01(\t\x12\x18\n\x10\x64ownloadProgress\x18\x08 \x01(\r\x12\x11\n\timageName\x18\t \x01(\t\"O\n\tErrorInfo\x12\x13\n\x0b\x64\x65scription\x18\x01 \x01(\t\x12-\n\ttimestamp\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\xab\x04\n\x0bZInfoDevice\x12\x13\n\x0bmachineArch\x18\x04 \x01(\t\x12\x0f\n\x07\x63puArch\x18\x05 \x01(\t\x12\x10\n\x08platform\x18\x06 \x01(\t\x12\x0c\n\x04ncpu\x18\x07 \x01(\r\x12\x0e\n\x06memory\x18\x08 \x01(\x04\x12\x0f\n\x07storage\x18\t \x01(\x04\x12!\n\x05minfo\x18\x0b \x01(\x0b\x32\x12.ZInfoManufacturer\x12\x1e\n\x07network\x18\r \x03(\x0b\x32\r.ZInfoNetwork\x12&\n\x12\x61ssignableAdapters\x18\x0f \x03(\x0b\x32\n.ZioBundle\x12\x16\n\x03\x64ns\x18\x10 \x01(\x0b\x32\t.ZInfoDNS\x12\"\n\x0bstorageList\x18\x11 \x03(\x0b\x32\r.ZInfoStorage\x12,\n\x08\x62ootTime\x18\x12 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x1b\n\x06swList\x18\x13 \x03(\x0b\x32\x0b.ZInfoDevSW\x12\x10\n\x08HostName\x18\x14 \x01(\t\x12 \n\x0bmetricItems\x18\x15 \x03(\x0b\x32\x0b.MetricItem\x12\x18\n\x10lastRebootReason\x18\x16 \x01(\t\x12\x32\n\x0elastRebootTime\x18\x17 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12)\n\rsystemAdapter\x18\x18 \x01(\x0b\x32\x12.SystemAdapterInfo\x12\x16\n\x0erestartCounter\x18\x19 \x01(\r\"L\n\x11SystemAdapterInfo\x12\x14\n\x0c\x63urrentIndex\x18\x01 \x01(\r\x12!\n\x06status\x18\x02 \x03(\x0b\x32\x11.DevicePortStatus\"\xf4\x01\n\x10\x44\x65vicePortStatus\x12\x0f\n\x07version\x18\x01 \x01(\r\x12\x0b\n\x03key\x18\x02 \x01(\t\x12\x30\n\x0ctimePriority\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12.\n\nlastFailed\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x31\n\rlastSucceeded\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x1a\n\x05ports\x18\x06 \x03(\x0b\x32\x0b.DevicePort\x12\x11\n\tlastError\x18\x07 \x01(\t\"\x80\x02\n\nDevicePort\x12\x0e\n\x06ifname\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0e\n\x06isMgmt\x18\x03 \x01(\x08\x12\x0c\n\x04\x66ree\x18\x04 \x01(\x08\x12\x10\n\x08\x64hcpType\x18\x0b \x01(\r\x12\x0e\n\x06subnet\x18\x0c \x01(\t\x12\x0f\n\x07gateway\x18\r \x01(\t\x12\x12\n\ndomainname\x18\x0e \x01(\t\x12\x11\n\tntpServer\x18\x0f \x01(\t\x12\x12\n\ndnsServers\x18\x10 \x03(\t\x12\x14\n\x0c\x64hcpRangeLow\x18\x11 \x01(\t\x12\x15\n\rdhcpRangeHigh\x18\x12 \x01(\t\x12\x1b\n\x05proxy\x18\x15 \x01(\x0b\x32\x0c.ProxyStatus\"\x96\x01\n\x0bProxyStatus\x12\x1c\n\x07proxies\x18\x01 \x03(\x0b\x32\x0b.ProxyEntry\x12\x12\n\nexceptions\x18\x02 \x01(\t\x12\x0f\n\x07pacfile\x18\x03 \x01(\t\x12\x1a\n\x12networkProxyEnable\x18\x04 \x01(\x08\x12\x17\n\x0fnetworkProxyURL\x18\x05 \x01(\t\x12\x0f\n\x07wpadURL\x18\x06 \x01(\t\"8\n\nProxyEntry\x12\x0c\n\x04type\x18\x01 \x01(\r\x12\x0e\n\x06server\x18\x02 \x01(\t\x12\x0c\n\x04port\x18\x03 \x01(\r\"\x99\x02\n\nZInfoDevSW\x12\x11\n\tactivated\x18\x02 \x01(\x08\x12\x16\n\x0epartitionLabel\x18\x03 \x01(\t\x12\x17\n\x0fpartitionDevice\x18\x04 \x01(\t\x12\x16\n\x0epartitionState\x18\x05 \x01(\t\x12\x19\n\x06status\x18\x06 \x01(\x0e\x32\t.ZSwState\x12\x14\n\x0cshortVersion\x18\x07 \x01(\t\x12\x13\n\x0blongVersion\x18\x08 \x01(\t\x12\x19\n\x05swErr\x18\t \x01(\x0b\x32\n.ErrorInfo\x12\x18\n\x10\x64ownloadProgress\x18\n \x01(\r\x12!\n\nuserStatus\x18\x0b \x01(\x0e\x32\r.BaseOsStatus\x12\x11\n\tsubStatus\x18\x0c \x01(\t\"Y\n\x0cZInfoStorage\x12\x0e\n\x06\x64\x65vice\x18\x01 \x01(\t\x12\x11\n\tmountPath\x18\x02 \x01(\t\x12\r\n\x05total\x18\x03 \x01(\x04\x12\x17\n\x0fstorageLocation\x18\x04 \x01(\x08\"\x9b\x02\n\x08ZInfoApp\x12\r\n\x05\x41ppID\x18\x01 \x01(\t\x12\x12\n\nappVersion\x18\x02 \x01(\t\x12\x11\n\tsystemApp\x18\x06 \x01(\x08\x12\x0f\n\x07\x41ppName\x18\x07 \x01(\t\x12\x1e\n\x0csoftwareList\x18\x08 \x03(\x0b\x32\x08.ZInfoSW\x12,\n\x08\x62ootTime\x18\x0c \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12$\n\x10\x61ssignedAdapters\x18\r \x03(\x0b\x32\n.ZioBundle\x12\x1a\n\x06\x61ppErr\x18\x0e \x03(\x0b\x32\n.ErrorInfo\x12\x18\n\x05state\x18\x0f \x01(\x0e\x32\t.ZSwState\x12\x1e\n\x07network\x18\x10 \x03(\x0b\x32\r.ZInfoNetwork\"D\n\x10ZInfoVpnLinkInfo\x12\r\n\x05spiId\x18\x01 \x01(\t\x12\x0e\n\x06subNet\x18\x02 \x01(\t\x12\x11\n\tdirection\x18\x03 \x01(\x08\"\xbd\x01\n\x0cZInfoVpnLink\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\r\n\x05reqId\x18\x03 \x01(\t\x12\x10\n\x08instTime\x18\x04 \x01(\x04\x12\x0f\n\x07\x65spInfo\x18\x05 \x01(\t\x12\x1d\n\x05state\x18\x06 \x01(\x0e\x32\x0e.ZInfoVpnState\x12 \n\x05lInfo\x18\n \x01(\x0b\x32\x11.ZInfoVpnLinkInfo\x12 \n\x05rInfo\x18\x0b \x01(\x0b\x32\x11.ZInfoVpnLinkInfo\"<\n\x10ZInfoVpnEndPoint\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0e\n\x06ipAddr\x18\x02 \x01(\t\x12\x0c\n\x04port\x18\x03 \x01(\r\"\xd9\x01\n\x0cZInfoVpnConn\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0f\n\x07version\x18\x03 \x01(\t\x12\x0f\n\x07\x65stTime\x18\x04 \x01(\x04\x12\x0c\n\x04ikes\x18\x05 \x01(\t\x12\x1d\n\x05state\x18\x06 \x01(\x0e\x32\x0e.ZInfoVpnState\x12 \n\x05lInfo\x18\x07 \x01(\x0b\x32\x11.ZInfoVpnEndPoint\x12 \n\x05rInfo\x18\x08 \x01(\x0b\x32\x11.ZInfoVpnEndPoint\x12\x1c\n\x05links\x18\n \x03(\x0b\x32\r.ZInfoVpnLink\"f\n\x08ZInfoVpn\x12\x0e\n\x06upTime\x18\x01 \x01(\x04\x12\x13\n\x0bpolicyBased\x18\x02 \x01(\x08\x12\x18\n\x10listeningIpAddrs\x18\x03 \x03(\t\x12\x1b\n\x04\x63onn\x18\n \x03(\x0b\x32\r.ZInfoVpnConn\",\n\tRlocState\x12\x0c\n\x04Rloc\x18\x01 \x01(\t\x12\x11\n\tReachable\x18\x02 \x01(\x08\"7\n\rMapCacheEntry\x12\x0b\n\x03\x45ID\x18\x01 \x01(\t\x12\x19\n\x05Rlocs\x18\x02 \x03(\x0b\x32\n.RlocState\"C\n\x0b\x44\x61tabaseMap\x12\x0b\n\x03IID\x18\x01 \x01(\x04\x12\'\n\x0fMapCacheEntries\x18\x02 \x03(\x0b\x32\x0e.MapCacheEntry\"8\n\x08\x44\x65\x63\x61pKey\x12\x0c\n\x04Rloc\x18\x01 \x01(\t\x12\x0c\n\x04Port\x18\x02 \x01(\x04\x12\x10\n\x08KeyCount\x18\x03 \x01(\x04\"\x8c\x01\n\tZInfoLisp\x12\x15\n\rItrCryptoPort\x18\x01 \x01(\x04\x12\x12\n\nEtrNatPort\x18\x02 \x01(\x04\x12\x12\n\nInterfaces\x18\x03 \x03(\t\x12\"\n\x0c\x44\x61tabaseMaps\x18\x04 \x03(\x0b\x32\x0c.DatabaseMap\x12\x1c\n\tDecapKeys\x18\x05 \x03(\x0b\x32\t.DecapKey\"\xd9\x02\n\x0cZInfoService\x12\x11\n\tserviceID\x18\x01 \x01(\t\x12\x13\n\x0bserviceName\x18\x02 \x01(\t\x12\x13\n\x0bserviceType\x18\x03 \x01(\r\x12\x1e\n\x0csoftwareList\x18\x04 \x01(\x0b\x32\x08.ZInfoSW\x12\x11\n\tactivated\x18\x05 \x01(\x08\x12/\n\x0bupTimeStamp\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12$\n\x10\x61ssignedAdapters\x18\x07 \x03(\x0b\x32\n.ZioBundle\x12\x1a\n\x06svcErr\x18\x08 \x03(\x0b\x32\n.ErrorInfo\x12\x1e\n\x07network\x18\t \x03(\x0b\x32\r.ZInfoNetwork\x12\x1a\n\x05vinfo\x18\x14 \x01(\x0b\x32\t.ZInfoVpnH\x00\x12\x1b\n\x05linfo\x18\x15 \x01(\x0b\x32\n.ZInfoLispH\x00\x42\r\n\x0bInfoContent\"\xb8\x03\n\x12ZInfoNetworkObject\x12\x11\n\tnetworkID\x18\x01 \x01(\t\x12\x13\n\x0bnetworkType\x18\x02 \x01(\r\x12\x10\n\x08\x64hcpType\x18\x03 \x01(\r\x12\x0e\n\x06subnet\x18\x04 \x01(\t\x12\x0f\n\x07gateway\x18\x05 \x01(\t\x12\x12\n\ndomainname\x18\x06 \x01(\t\x12\x11\n\tntpServer\x18\x07 \x01(\t\x12\x12\n\ndnsServers\x18\x08 \x03(\t\x12\x14\n\x0c\x64hcpRangeLow\x18\t \x01(\t\x12\x15\n\rdhcpRangeHigh\x18\n \x01(\t\x12\x11\n\tbridgeNum\x18\x0c \x01(\r\x12\x12\n\nbridgeName\x18\r \x01(\t\x12\x14\n\x0c\x62ridgeIPAddr\x18\x0e \x01(\t\x12-\n\ripAssignments\x18\x0f \x03(\x0b\x32\x16.ZmetIPAssignmentEntry\x12\x14\n\x0c\x62ridgeIPSets\x18\x10 \x03(\t\x12\x10\n\x08vifNames\x18\x11 \x03(\t\x12\x0f\n\x07ipv4Eid\x18\x12 \x01(\x08\x12\x1e\n\nnetworkErr\x18\x13 \x03(\x0b\x32\n.ErrorInfo\x12\x1a\n\x04vifs\x18\x19 \x03(\x0b\x32\x0c.ZmetVifInfo\"\x89\x04\n\x14ZInfoNetworkInstance\x12\x11\n\tnetworkID\x18\x02 \x01(\t\x12\x16\n\x0enetworkVersion\x18\x03 \x01(\t\x12\x10\n\x08instType\x18\x05 \x01(\r\x12\x13\n\x0b\x64isplayname\x18\x06 \x01(\t\x12\x11\n\tactivated\x18\x07 \x01(\x08\x12/\n\x0bupTimeStamp\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x1e\n\x0csoftwareList\x18\t \x01(\x0b\x32\x08.ZInfoSW\x12\x11\n\tbridgeNum\x18\x14 \x01(\r\x12\x12\n\nbridgeName\x18\x15 \x01(\t\x12\x14\n\x0c\x62ridgeIPAddr\x18\x16 \x01(\t\x12-\n\ripAssignments\x18\x17 \x03(\x0b\x32\x16.ZmetIPAssignmentEntry\x12\x14\n\x0c\x62ridgeIPSets\x18\x18 \x03(\t\x12\x1a\n\x04vifs\x18\x19 \x03(\x0b\x32\x0c.ZmetVifInfo\x12\x0f\n\x07ipv4Eid\x18\x1a \x01(\x08\x12$\n\x10\x61ssignedAdapters\x18\x1e \x03(\x0b\x32\n.ZioBundle\x12\x1a\n\x05vinfo\x18\x1f \x01(\x0b\x32\t.ZInfoVpnH\x00\x12\x1b\n\x05linfo\x18  \x01(\x0b\x32\n.ZInfoLispH\x00\x12\x1e\n\nnetworkErr\x18( \x03(\x0b\x32\n.ErrorInfoB\r\n\x0bInfoContent\">\n\x15ZmetIPAssignmentEntry\x12\x12\n\nmacAddress\x18\x01 \x01(\t\x12\x11\n\tipAddress\x18\x02 \x03(\t\"A\n\x0bZmetVifInfo\x12\x0f\n\x07vifName\x18\x01 \x01(\t\x12\x12\n\nmacAddress\x18\x02 \x01(\t\x12\r\n\x05\x61ppID\x18\x03 \x01(\t\"\x9f\x02\n\x08ZInfoMsg\x12\x1a\n\x05ztype\x18\x01 \x01(\x0e\x32\x0b.ZInfoTypes\x12\r\n\x05\x64\x65vId\x18\x02 \x01(\t\x12\x1d\n\x05\x64info\x18\x03 \x01(\x0b\x32\x0c.ZInfoDeviceH\x00\x12\x1a\n\x05\x61info\x18\x05 \x01(\x0b\x32\t.ZInfoAppH\x00\x12\x1e\n\x05sinfo\x18\n \x01(\x0b\x32\r.ZInfoServiceH\x00\x12$\n\x05ninfo\x18\x0b \x01(\x0b\x32\x13.ZInfoNetworkObjectH\x00\x12\'\n\x06niinfo\x18\x0c \x01(\x0b\x32\x15.ZInfoNetworkInstanceH\x00\x12/\n\x0b\x61tTimeStamp\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\r\n\x0bInfoContent\"o\n\tZioBundle\x12\x16\n\x04type\x18\x01 \x01(\x0e\x32\x08.ZioType\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0f\n\x07members\x18\x03 \x03(\t\x12\x15\n\rusedByAppUUID\x18\x04 \x01(\t\x12\x14\n\x0cusedByBaseOS\x18\x05 \x01(\x08\"b\n\x0cmemoryMetric\x12\x0f\n\x07usedMem\x18\x02 \x01(\r\x12\x10\n\x08\x61vailMem\x18\x03 \x01(\r\x12\x16\n\x0eusedPercentage\x18\x04 \x01(\x01\x12\x17\n\x0f\x61vailPercentage\x18\x05 \x01(\x01\"\xbb\x02\n\rnetworkMetric\x12\r\n\x05iName\x18\x01 \x01(\t\x12\x0f\n\x07txBytes\x18\x02 \x01(\x04\x12\x0f\n\x07rxBytes\x18\x03 \x01(\x04\x12\x0f\n\x07txDrops\x18\x04 \x01(\x04\x12\x0f\n\x07rxDrops\x18\x05 \x01(\x04\x12\x0e\n\x06txRate\x18\x06 \x01(\x04\x12\x0e\n\x06rxRate\x18\x07 \x01(\x04\x12\x0e\n\x06txPkts\x18\x08 \x01(\x04\x12\x0e\n\x06rxPkts\x18\t \x01(\x04\x12\x10\n\x08txErrors\x18\n \x01(\x04\x12\x10\n\x08rxErrors\x18\x0b \x01(\x04\x12\x12\n\ntxAclDrops\x18\x0c \x01(\x04\x12\x12\n\nrxAclDrops\x18\r \x01(\x04\x12\x1b\n\x13txAclRateLimitDrops\x18\x0e \x01(\x04\x12\x1b\n\x13rxAclRateLimitDrops\x18\x0f \x01(\x04\x12\x11\n\tlocalName\x18\x10 \x01(\t\"\xca\x01\n\x0ezedcloudMetric\x12\x0e\n\x06ifName\x18\x01 \x01(\t\x12\x10\n\x08\x66\x61ilures\x18\x02 \x01(\x04\x12\x0f\n\x07success\x18\x03 \x01(\x04\x12/\n\x0blastFailure\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12/\n\x0blastSuccess\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12#\n\nurlMetrics\x18\x06 \x03(\x0b\x32\x0f.urlcloudMetric\"\xa2\x01\n\x0eurlcloudMetric\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x13\n\x0btryMsgCount\x18\x02 \x01(\x03\x12\x14\n\x0ctryByteCount\x18\x03 \x01(\x03\x12\x14\n\x0csentMsgCount\x18\x04 \x01(\x03\x12\x15\n\rsentByteCount\x18\x05 \x01(\x03\x12\x14\n\x0crecvMsgCount\x18\x06 \x01(\x03\x12\x15\n\rrecvByteCount\x18\x07 \x01(\x03\"I\n\x0c\x61ppCpuMetric\x12*\n\x06upTime\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\r\n\x05total\x18\x05 \x01(\x04\"\xbe\x02\n\x0c\x64\x65viceMetric\x12\x1d\n\x06memory\x18\x02 \x01(\x0b\x32\r.memoryMetric\x12\x1f\n\x07network\x18\x03 \x03(\x0b\x32\x0e.networkMetric\x12!\n\x08zedcloud\x18\x04 \x03(\x0b\x32\x0f.zedcloudMetric\x12\x19\n\x04\x64isk\x18\x06 \x03(\x0b\x32\x0b.diskMetric\x12 \n\tcpuMetric\x18\x07 \x01(\x0b\x32\r.appCpuMetric\x12 \n\x0bmetricItems\x18\x08 \x03(\x0b\x32\x0b.MetricItem\x12 \n\x18runtimeStorageOverheadMB\x18\t \x01(\x04\x12\x1b\n\x13\x61ppRunTimeStorageMB\x18\n \x01(\x04\x12-\n\x16systemServicesMemoryMB\x18\x0b \x01(\x0b\x32\r.memoryMetric\"\xbb\x01\n\nMetricItem\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1d\n\x04type\x18\x02 \x01(\x0e\x32\x0f.MetricItemType\x12\x13\n\tboolValue\x18\x03 \x01(\x08H\x00\x12\x15\n\x0buint32Value\x18\x04 \x01(\rH\x00\x12\x15\n\x0buint64Value\x18\x05 \x01(\x04H\x00\x12\x14\n\nfloatValue\x18\x06 \x01(\x02H\x00\x12\x15\n\x0bstringValue\x18\x07 \x01(\tH\x00\x42\x11\n\x0fmetricItemValue\"\xa6\x01\n\ndiskMetric\x12\x0c\n\x04\x64isk\x18\x01 \x01(\t\x12\x11\n\tmountPath\x18\x02 \x01(\t\x12\x11\n\treadBytes\x18\x03 \x01(\x04\x12\x12\n\nwriteBytes\x18\x04 \x01(\x04\x12\x11\n\treadCount\x18\x05 \x01(\x04\x12\x12\n\nwriteCount\x18\x06 \x01(\x04\x12\r\n\x05total\x18\x07 \x01(\x04\x12\x0c\n\x04used\x18\x08 \x01(\x04\x12\x0c\n\x04\x66ree\x18\t \x01(\x04\"a\n\rappDiskMetric\x12\x0c\n\x04\x64isk\x18\x01 \x01(\t\x12\x13\n\x0bprovisioned\x18\x02 \x01(\x04\x12\x0c\n\x04used\x18\x03 \x01(\x04\x12\x10\n\x08\x64iskType\x18\x04 \x01(\t\x12\r\n\x05\x64irty\x18\x05 \x01(\x08\"\xb9\x01\n\tappMetric\x12\r\n\x05\x41ppID\x18\x01 \x01(\t\x12\x12\n\nappVersion\x18\n \x01(\t\x12\x0f\n\x07\x41ppName\x18\x02 \x01(\t\x12\x1a\n\x03\x63pu\x18\x03 \x01(\x0b\x32\r.appCpuMetric\x12\x1d\n\x06memory\x18\x04 \x01(\x0b\x32\r.memoryMetric\x12\x1f\n\x07network\x18\x05 \x03(\x0b\x32\x0e.networkMetric\x12\x1c\n\x04\x64isk\x18\x06 \x03(\x0b\x32\x0e.appDiskMetric\")\n\x07PktStat\x12\x0f\n\x07Packets\x18\x01 \x01(\x04\x12\r\n\x05\x42ytes\x18\x02 \x01(\x04\"R\n\tRlocStats\x12\x0c\n\x04Rloc\x18\x01 \x01(\t\x12\x17\n\x05Stats\x18\x02 \x01(\x0b\x32\x08.PktStat\x12\x1e\n\x16SecondsSinceLastPacket\x18\x03 \x01(\x04\"J\n\x08\x45idStats\x12\x0b\n\x03IID\x18\x01 \x01(\x04\x12\x0b\n\x03\x45ID\x18\x02 \x01(\t\x12$\n\x10RlocStatsEntries\x18\x03 \x03(\x0b\x32\n.RlocStats\"\xa6\x03\n\x0bZMetricLisp\x12\"\n\x0f\x45idStatsEntries\x18\x01 \x03(\x0b\x32\t.EidStats\x12$\n\x12ItrPacketSendError\x18\x02 \x01(\x0b\x32\x08.PktStat\x12!\n\x0fInvalidEidError\x18\x03 \x01(\x0b\x32\x08.PktStat\x12\x1e\n\x0cNoDecryptKey\x18\x04 \x01(\x0b\x32\x08.PktStat\x12\"\n\x10OuterHeaderError\x18\x05 \x01(\x0b\x32\x08.PktStat\x12!\n\x0f\x42\x61\x64InnerVersion\x18\x06 \x01(\x0b\x32\x08.PktStat\x12\x1d\n\x0bGoodPackets\x18\x07 \x01(\x0b\x32\x08.PktStat\x12\x1a\n\x08ICVError\x18\x08 \x01(\x0b\x32\x08.PktStat\x12!\n\x0fLispHeaderError\x18\t \x01(\x0b\x32\x08.PktStat\x12\x1f\n\rCheckSumError\x18\n \x01(\x0b\x32\x08.PktStat\x12$\n\x12\x44\x65\x63\x61pReInjectError\x18\x0b \x01(\x0b\x32\x08.PktStat\x12\x1e\n\x0c\x44\x65\x63ryptError\x18\x0c \x01(\x0b\x32\x08.PktStat\"~\n\x0bZMetricConn\x12\x18\n\x06InPkts\x18\x01 \x01(\x0b\x32\x08.PktStat\x12\x19\n\x07OutPkts\x18\x02 \x01(\x0b\x32\x08.PktStat\x12\x19\n\x07\x45rrPkts\x18\x03 \x01(\x0b\x32\x08.PktStat\x12\x1f\n\rCarierErrPkts\x18\x04 \x01(\x0b\x32\x08.PktStat\"\x8a\x01\n\nZMetricVpn\x12\x1e\n\x08\x43onnStat\x18\x01 \x01(\x0b\x32\x0c.ZMetricConn\x12\x1d\n\x07IkeStat\x18\x02 \x01(\x0b\x32\x0c.ZMetricConn\x12\x1e\n\x08NatTStat\x18\x03 \x01(\x0b\x32\x0c.ZMetricConn\x12\x1d\n\x07\x45spStat\x18\x04 \x01(\x0b\x32\x0c.ZMetricConn\"\r\n\x0bZMetricNone\"I\n\x0fZMetricFlowLink\x12\x10\n\x06subNet\x18\x01 \x01(\tH\x00\x12\r\n\x03\x65id\x18\x02 \x01(\tH\x00\x12\r\n\x05spiId\x18\x03 \x01(\tB\x06\n\x04Link\"|\n\x13ZMetricFlowEndPoint\x12\x10\n\x06ipAddr\x18\x01 \x01(\tH\x00\x12\x0e\n\x04rloc\x18\x02 \x01(\tH\x00\x12\x1e\n\x04link\x18\x05 \x03(\x0b\x32\x10.ZMetricFlowLink\x12\x17\n\x05stats\x18\n \x01(\x0b\x32\x08.PktStatB\n\n\x08\x45ndpoint\"\xa5\x01\n\x0bZMetricFlow\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0c\n\x04type\x18\x03 \x01(\r\x12\x0b\n\x03iid\x18\x04 \x01(\x04\x12\x0f\n\x07\x65stTime\x18\x05 \x01(\x04\x12\'\n\tlEndPoint\x18\n \x01(\x0b\x32\x14.ZMetricFlowEndPoint\x12\'\n\trEndPoint\x18\x0b \x03(\x0b\x32\x14.ZMetricFlowEndPoint\"\x88\x03\n\x11ZMetricLispGlobal\x12$\n\x12ItrPacketSendError\x18\x02 \x01(\x0b\x32\x08.PktStat\x12!\n\x0fInvalidEidError\x18\x03 \x01(\x0b\x32\x08.PktStat\x12\x1e\n\x0cNoDecryptKey\x18\x04 \x01(\x0b\x32\x08.PktStat\x12\"\n\x10OuterHeaderError\x18\x05 \x01(\x0b\x32\x08.PktStat\x12!\n\x0f\x42\x61\x64InnerVersion\x18\x06 \x01(\x0b\x32\x08.PktStat\x12\x1d\n\x0bGoodPackets\x18\x07 \x01(\x0b\x32\x08.PktStat\x12\x1a\n\x08ICVError\x18\x08 \x01(\x0b\x32\x08.PktStat\x12!\n\x0fLispHeaderError\x18\t \x01(\x0b\x32\x08.PktStat\x12\x1f\n\rCheckSumError\x18\n \x01(\x0b\x32\x08.PktStat\x12$\n\x12\x44\x65\x63\x61pReInjectError\x18\x0b \x01(\x0b\x32\x08.PktStat\x12\x1e\n\x0c\x44\x65\x63ryptError\x18\x0c \x01(\x0b\x32\x08.PktStat\"\x8a\x02\n\x0eZMetricService\x12\x11\n\tserviceID\x18\x01 \x01(\t\x12\x13\n\x0bserviceName\x18\x02 \x01(\t\x12\x13\n\x0bserviceType\x18\x03 \x01(\r\x12\x1f\n\x07network\x18\x04 \x03(\x0b\x32\x0e.networkMetric\x12\x1b\n\x04vpnm\x18\x14 \x01(\x0b\x32\x0b.ZMetricVpnH\x00\x12\x1d\n\x05lispm\x18\x15 \x01(\x0b\x32\x0c.ZMetricLispH\x00\x12\x1f\n\tflowStats\x18\n \x03(\x0b\x32\x0c.ZMetricFlow\x12+\n\x0flispGlobalStats\x18\x0b \x01(\x0b\x32\x12.ZMetricLispGlobalB\x10\n\x0eServiceContent\"W\n\x0cNetworkStats\x12\x14\n\x0ctotalPackets\x18\x01 \x01(\x04\x12\x0e\n\x06\x65rrors\x18\x02 \x01(\x04\x12\r\n\x05\x64rops\x18\x03 \x01(\x04\x12\x12\n\ntotalBytes\x18\x04 \x01(\x04\"K\n\x13ZMetricNetworkStats\x12\x19\n\x02rx\x18\x01 \x01(\x0b\x32\r.NetworkStats\x12\x19\n\x02tx\x18\x02 \x01(\x0b\x32\r.NetworkStats\"\x86\x03\n\x16ZMetricNetworkInstance\x12\x11\n\tnetworkID\x18\x02 \x01(\t\x12\x16\n\x0enetworkVersion\x18\x03 \x01(\t\x12\x10\n\x08instType\x18\x05 \x01(\r\x12\x13\n\x0b\x64isplayname\x18\x06 \x01(\t\x12\x11\n\tactivated\x18\x07 \x01(\x08\x12\x1f\n\x07network\x18\n \x03(\x0b\x32\x0e.networkMetric\x12\x1b\n\x04vpnm\x18\x14 \x01(\x0b\x32\x0b.ZMetricVpnH\x00\x12\x1d\n\x05lispm\x18\x15 \x01(\x0b\x32\x0c.ZMetricLispH\x00\x12\x1d\n\x05nonem\x18\x16 \x01(\x0b\x32\x0c.ZMetricNoneH\x00\x12\x1f\n\tflowStats\x18\x1e \x03(\x0b\x32\x0c.ZMetricFlow\x12+\n\x0flispGlobalStats\x18\x1f \x01(\x0b\x32\x12.ZMetricLispGlobal\x12*\n\x0cnetworkStats\x18( \x01(\x0b\x32\x14.ZMetricNetworkStatsB\x11\n\x0fInstanceContent\"\xd4\x01\n\nZMetricMsg\x12\r\n\x05\x64\x65vID\x18\x01 \x01(\t\x12/\n\x0b\x61tTimeStamp\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x1b\n\x02\x64m\x18\x04 \x01(\x0b\x32\r.deviceMetricH\x00\x12\x16\n\x02\x61m\x18\x05 \x03(\x0b\x32\n.appMetric\x12\x1b\n\x02sm\x18\x06 \x03(\x0b\x32\x0f.ZMetricService\x12#\n\x02nm\x18\x07 \x03(\x0b\x32\x17.ZMetricNetworkInstanceB\x0f\n\rMetricContent*k\n\nZInfoTypes\x12\t\n\x05ZiNop\x10\x00\x12\x0c\n\x08ZiDevice\x10\x01\x12\t\n\x05ZiApp\x10\x03\x12\r\n\tZiService\x10\x04\x12\x13\n\x0fZiNetworkObject\x10\x05\x12\x15\n\x11ZiNetworkInstance\x10\x06*<\n\x10ZPeripheralTypes\x12\n\n\x06ZpNone\x10\x00\x12\r\n\tZpStorage\x10\x01\x12\r\n\tZpNetwork\x10\x02*\xb8\x01\n\x08ZSwState\x12\x0b\n\x07INVALID\x10\x00\x12\x0b\n\x07INITIAL\x10\x01\x12\x14\n\x10\x44OWNLOAD_STARTED\x10\x02\x12\x0e\n\nDOWNLOADED\x10\x03\x12\r\n\tDELIVERED\x10\x04\x12\r\n\tINSTALLED\x10\x05\x12\x0b\n\x07\x42OOTING\x10\x06\x12\x0b\n\x07RUNNING\x10\x07\x12\x0b\n\x07HALTING\x10\x08\x12\n\n\x06HALTED\x10\t\x12\x0e\n\nRESTARTING\x10\n\x12\x0b\n\x07PURGING\x10\x0b*h\n\x0c\x42\x61seOsStatus\x12\x08\n\x04NONE\x10\x00\x12\n\n\x06\x41\x43TIVE\x10\x01\x12\x0c\n\x08UPDATING\x10\x02\x12\r\n\tREBOOTING\x10\x03\x12\x0b\n\x07TESTING\x10\x04\x12\x0c\n\x08\x46\x41LLBACK\x10\x05\x12\n\n\x06\x46\x41ILED\x10\x06*\x8f\x01\n\rZInfoVpnState\x12\x0f\n\x0bVPN_INVALID\x10\x00\x12\x0f\n\x0bVPN_INITIAL\x10\x01\x12\x12\n\x0eVPN_CONNECTING\x10\x02\x12\x13\n\x0fVPN_ESTABLISHED\x10\x03\x12\x11\n\rVPN_INSTALLED\x10\x04\x12\x0f\n\x0bVPN_REKEYED\x10\x05\x12\x0f\n\x0bVPN_DELETED\x10\n*H\n\x07ZioType\x12\n\n\x06ZioNop\x10\x00\x12\n\n\x06ZioEth\x10\x01\x12\n\n\x06ZioUSB\x10\x02\x12\n\n\x06ZioCOM\x10\x03\x12\r\n\x08ZioOther\x10\xff\x01*2\n\x0cZmetricTypes\x12\t\n\x05ZmNop\x10\x00\x12\x0c\n\x08ZmDevice\x10\x01\x12\t\n\x05ZmApp\x10\x03*f\n\x0eMetricItemType\x12\x13\n\x0fMetricItemOther\x10\x00\x12\x13\n\x0fMetricItemGauge\x10\x01\x12\x15\n\x11MetricItemCounter\x10\x02\x12\x13\n\x0fMetricItemState\x10\x03\x42\x44\n\x1f\x63om.zededa.cloud.uservice.protoZ!github.com/zededa/eve/sdk/go/zmetb\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_ZINFOTYPES = _descriptor.EnumDescriptor(
  name='ZInfoTypes',
  full_name='ZInfoTypes',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ZiNop', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZiDevice', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZiApp', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZiService', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZiNetworkObject', index=4, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZiNetworkInstance', index=5, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=10479,
  serialized_end=10586,
)
_sym_db.RegisterEnumDescriptor(_ZINFOTYPES)

ZInfoTypes = enum_type_wrapper.EnumTypeWrapper(_ZINFOTYPES)
_ZPERIPHERALTYPES = _descriptor.EnumDescriptor(
  name='ZPeripheralTypes',
  full_name='ZPeripheralTypes',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ZpNone', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZpStorage', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZpNetwork', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=10588,
  serialized_end=10648,
)
_sym_db.RegisterEnumDescriptor(_ZPERIPHERALTYPES)

ZPeripheralTypes = enum_type_wrapper.EnumTypeWrapper(_ZPERIPHERALTYPES)
_ZSWSTATE = _descriptor.EnumDescriptor(
  name='ZSwState',
  full_name='ZSwState',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INITIAL', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DOWNLOAD_STARTED', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DOWNLOADED', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DELIVERED', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INSTALLED', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BOOTING', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RUNNING', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HALTING', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HALTED', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RESTARTING', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PURGING', index=11, number=11,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=10651,
  serialized_end=10835,
)
_sym_db.RegisterEnumDescriptor(_ZSWSTATE)

ZSwState = enum_type_wrapper.EnumTypeWrapper(_ZSWSTATE)
_BASEOSSTATUS = _descriptor.EnumDescriptor(
  name='BaseOsStatus',
  full_name='BaseOsStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTIVE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UPDATING', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REBOOTING', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TESTING', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FALLBACK', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILED', index=6, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=10837,
  serialized_end=10941,
)
_sym_db.RegisterEnumDescriptor(_BASEOSSTATUS)

BaseOsStatus = enum_type_wrapper.EnumTypeWrapper(_BASEOSSTATUS)
_ZINFOVPNSTATE = _descriptor.EnumDescriptor(
  name='ZInfoVpnState',
  full_name='ZInfoVpnState',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='VPN_INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VPN_INITIAL', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VPN_CONNECTING', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VPN_ESTABLISHED', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VPN_INSTALLED', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VPN_REKEYED', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VPN_DELETED', index=6, number=10,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=10944,
  serialized_end=11087,
)
_sym_db.RegisterEnumDescriptor(_ZINFOVPNSTATE)

ZInfoVpnState = enum_type_wrapper.EnumTypeWrapper(_ZINFOVPNSTATE)
_ZIOTYPE = _descriptor.EnumDescriptor(
  name='ZioType',
  full_name='ZioType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ZioNop', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZioEth', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZioUSB', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZioCOM', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZioOther', index=4, number=255,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=11089,
  serialized_end=11161,
)
_sym_db.RegisterEnumDescriptor(_ZIOTYPE)

ZioType = enum_type_wrapper.EnumTypeWrapper(_ZIOTYPE)
_ZMETRICTYPES = _descriptor.EnumDescriptor(
  name='ZmetricTypes',
  full_name='ZmetricTypes',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ZmNop', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZmDevice', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZmApp', index=2, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=11163,
  serialized_end=11213,
)
_sym_db.RegisterEnumDescriptor(_ZMETRICTYPES)

ZmetricTypes = enum_type_wrapper.EnumTypeWrapper(_ZMETRICTYPES)
_METRICITEMTYPE = _descriptor.EnumDescriptor(
  name='MetricItemType',
  full_name='MetricItemType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='MetricItemOther', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MetricItemGauge', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MetricItemCounter', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MetricItemState', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=11215,
  serialized_end=11317,
)
_sym_db.RegisterEnumDescriptor(_METRICITEMTYPE)

MetricItemType = enum_type_wrapper.EnumTypeWrapper(_METRICITEMTYPE)
ZiNop = 0
ZiDevice = 1
ZiApp = 3
ZiService = 4
ZiNetworkObject = 5
ZiNetworkInstance = 6
ZpNone = 0
ZpStorage = 1
ZpNetwork = 2
INVALID = 0
INITIAL = 1
DOWNLOAD_STARTED = 2
DOWNLOADED = 3
DELIVERED = 4
INSTALLED = 5
BOOTING = 6
RUNNING = 7
HALTING = 8
HALTED = 9
RESTARTING = 10
PURGING = 11
NONE = 0
ACTIVE = 1
UPDATING = 2
REBOOTING = 3
TESTING = 4
FALLBACK = 5
FAILED = 6
VPN_INVALID = 0
VPN_INITIAL = 1
VPN_CONNECTING = 2
VPN_ESTABLISHED = 3
VPN_INSTALLED = 4
VPN_REKEYED = 5
VPN_DELETED = 10
ZioNop = 0
ZioEth = 1
ZioUSB = 2
ZioCOM = 3
ZioOther = 255
ZmNop = 0
ZmDevice = 1
ZmApp = 3
MetricItemOther = 0
MetricItemGauge = 1
MetricItemCounter = 2
MetricItemState = 3



_ZINFOMANUFACTURER = _descriptor.Descriptor(
  name='ZInfoManufacturer',
  full_name='ZInfoManufacturer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='manufacturer', full_name='ZInfoManufacturer.manufacturer', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='productName', full_name='ZInfoManufacturer.productName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='version', full_name='ZInfoManufacturer.version', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='serialNumber', full_name='ZInfoManufacturer.serialNumber', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='UUID', full_name='ZInfoManufacturer.UUID', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='compatible', full_name='ZInfoManufacturer.compatible', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='biosVendor', full_name='ZInfoManufacturer.biosVendor', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='biosVersion', full_name='ZInfoManufacturer.biosVersion', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='biosReleaseDate', full_name='ZInfoManufacturer.biosReleaseDate', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=48,
  serialized_end=249,
)


_ZINFONETWORK = _descriptor.Descriptor(
  name='ZInfoNetwork',
  full_name='ZInfoNetwork',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='macAddr', full_name='ZInfoNetwork.macAddr', index=0,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='devName', full_name='ZInfoNetwork.devName', index=1,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='IPAddrs', full_name='ZInfoNetwork.IPAddrs', index=2,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='defaultRouters', full_name='ZInfoNetwork.defaultRouters', index=3,
      number=6, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dns', full_name='ZInfoNetwork.dns', index=4,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='up', full_name='ZInfoNetwork.up', index=5,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='location', full_name='ZInfoNetwork.location', index=6,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uplink', full_name='ZInfoNetwork.uplink', index=7,
      number=10, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='networkErr', full_name='ZInfoNetwork.networkErr', index=8,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='localName', full_name='ZInfoNetwork.localName', index=9,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='proxy', full_name='ZInfoNetwork.proxy', index=10,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=252,
  serialized_end=500,
)


_GEOLOC = _descriptor.Descriptor(
  name='GeoLoc',
  full_name='GeoLoc',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='UnderlayIP', full_name='GeoLoc.UnderlayIP', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Hostname', full_name='GeoLoc.Hostname', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='City', full_name='GeoLoc.City', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Region', full_name='GeoLoc.Region', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Country', full_name='GeoLoc.Country', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Loc', full_name='GeoLoc.Loc', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Org', full_name='GeoLoc.Org', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Postal', full_name='GeoLoc.Postal', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=503,
  serialized_end=638,
)


_ZINFODNS = _descriptor.Descriptor(
  name='ZInfoDNS',
  full_name='ZInfoDNS',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='DNSservers', full_name='ZInfoDNS.DNSservers', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DNSdomain', full_name='ZInfoDNS.DNSdomain', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DNSsearch', full_name='ZInfoDNS.DNSsearch', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=640,
  serialized_end=708,
)


_ZINFOPERIPHERAL = _descriptor.Descriptor(
  name='ZinfoPeripheral',
  full_name='ZinfoPeripheral',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ztype', full_name='ZinfoPeripheral.ztype', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pluggable', full_name='ZinfoPeripheral.pluggable', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='minfo', full_name='ZinfoPeripheral.minfo', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=710,
  serialized_end=815,
)


_ZINFOSW = _descriptor.Descriptor(
  name='ZInfoSW',
  full_name='ZInfoSW',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='swVersion', full_name='ZInfoSW.swVersion', index=0,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='swHash', full_name='ZInfoSW.swHash', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='ZInfoSW.state', index=2,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='target', full_name='ZInfoSW.target', index=3,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vdev', full_name='ZInfoSW.vdev', index=4,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='downloadProgress', full_name='ZInfoSW.downloadProgress', index=5,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='imageName', full_name='ZInfoSW.imageName', index=6,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=818,
  serialized_end=963,
)


_ERRORINFO = _descriptor.Descriptor(
  name='ErrorInfo',
  full_name='ErrorInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='description', full_name='ErrorInfo.description', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='ErrorInfo.timestamp', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=965,
  serialized_end=1044,
)


_ZINFODEVICE = _descriptor.Descriptor(
  name='ZInfoDevice',
  full_name='ZInfoDevice',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='machineArch', full_name='ZInfoDevice.machineArch', index=0,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cpuArch', full_name='ZInfoDevice.cpuArch', index=1,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='platform', full_name='ZInfoDevice.platform', index=2,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ncpu', full_name='ZInfoDevice.ncpu', index=3,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='memory', full_name='ZInfoDevice.memory', index=4,
      number=8, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='storage', full_name='ZInfoDevice.storage', index=5,
      number=9, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='minfo', full_name='ZInfoDevice.minfo', index=6,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='network', full_name='ZInfoDevice.network', index=7,
      number=13, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='assignableAdapters', full_name='ZInfoDevice.assignableAdapters', index=8,
      number=15, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dns', full_name='ZInfoDevice.dns', index=9,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='storageList', full_name='ZInfoDevice.storageList', index=10,
      number=17, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bootTime', full_name='ZInfoDevice.bootTime', index=11,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='swList', full_name='ZInfoDevice.swList', index=12,
      number=19, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='HostName', full_name='ZInfoDevice.HostName', index=13,
      number=20, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='metricItems', full_name='ZInfoDevice.metricItems', index=14,
      number=21, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastRebootReason', full_name='ZInfoDevice.lastRebootReason', index=15,
      number=22, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastRebootTime', full_name='ZInfoDevice.lastRebootTime', index=16,
      number=23, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='systemAdapter', full_name='ZInfoDevice.systemAdapter', index=17,
      number=24, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='restartCounter', full_name='ZInfoDevice.restartCounter', index=18,
      number=25, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1047,
  serialized_end=1602,
)


_SYSTEMADAPTERINFO = _descriptor.Descriptor(
  name='SystemAdapterInfo',
  full_name='SystemAdapterInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='currentIndex', full_name='SystemAdapterInfo.currentIndex', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='SystemAdapterInfo.status', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1604,
  serialized_end=1680,
)


_DEVICEPORTSTATUS = _descriptor.Descriptor(
  name='DevicePortStatus',
  full_name='DevicePortStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='version', full_name='DevicePortStatus.version', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='key', full_name='DevicePortStatus.key', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timePriority', full_name='DevicePortStatus.timePriority', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastFailed', full_name='DevicePortStatus.lastFailed', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastSucceeded', full_name='DevicePortStatus.lastSucceeded', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ports', full_name='DevicePortStatus.ports', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastError', full_name='DevicePortStatus.lastError', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1683,
  serialized_end=1927,
)


_DEVICEPORT = _descriptor.Descriptor(
  name='DevicePort',
  full_name='DevicePort',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ifname', full_name='DevicePort.ifname', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='DevicePort.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='isMgmt', full_name='DevicePort.isMgmt', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='free', full_name='DevicePort.free', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dhcpType', full_name='DevicePort.dhcpType', index=4,
      number=11, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='subnet', full_name='DevicePort.subnet', index=5,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='gateway', full_name='DevicePort.gateway', index=6,
      number=13, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='domainname', full_name='DevicePort.domainname', index=7,
      number=14, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ntpServer', full_name='DevicePort.ntpServer', index=8,
      number=15, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dnsServers', full_name='DevicePort.dnsServers', index=9,
      number=16, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dhcpRangeLow', full_name='DevicePort.dhcpRangeLow', index=10,
      number=17, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dhcpRangeHigh', full_name='DevicePort.dhcpRangeHigh', index=11,
      number=18, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='proxy', full_name='DevicePort.proxy', index=12,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1930,
  serialized_end=2186,
)


_PROXYSTATUS = _descriptor.Descriptor(
  name='ProxyStatus',
  full_name='ProxyStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='proxies', full_name='ProxyStatus.proxies', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exceptions', full_name='ProxyStatus.exceptions', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pacfile', full_name='ProxyStatus.pacfile', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='networkProxyEnable', full_name='ProxyStatus.networkProxyEnable', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='networkProxyURL', full_name='ProxyStatus.networkProxyURL', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='wpadURL', full_name='ProxyStatus.wpadURL', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2189,
  serialized_end=2339,
)


_PROXYENTRY = _descriptor.Descriptor(
  name='ProxyEntry',
  full_name='ProxyEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='ProxyEntry.type', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='server', full_name='ProxyEntry.server', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='port', full_name='ProxyEntry.port', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2341,
  serialized_end=2397,
)


_ZINFODEVSW = _descriptor.Descriptor(
  name='ZInfoDevSW',
  full_name='ZInfoDevSW',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='activated', full_name='ZInfoDevSW.activated', index=0,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partitionLabel', full_name='ZInfoDevSW.partitionLabel', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partitionDevice', full_name='ZInfoDevSW.partitionDevice', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partitionState', full_name='ZInfoDevSW.partitionState', index=3,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='ZInfoDevSW.status', index=4,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='shortVersion', full_name='ZInfoDevSW.shortVersion', index=5,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='longVersion', full_name='ZInfoDevSW.longVersion', index=6,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='swErr', full_name='ZInfoDevSW.swErr', index=7,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='downloadProgress', full_name='ZInfoDevSW.downloadProgress', index=8,
      number=10, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='userStatus', full_name='ZInfoDevSW.userStatus', index=9,
      number=11, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='subStatus', full_name='ZInfoDevSW.subStatus', index=10,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2400,
  serialized_end=2681,
)


_ZINFOSTORAGE = _descriptor.Descriptor(
  name='ZInfoStorage',
  full_name='ZInfoStorage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device', full_name='ZInfoStorage.device', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mountPath', full_name='ZInfoStorage.mountPath', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='total', full_name='ZInfoStorage.total', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='storageLocation', full_name='ZInfoStorage.storageLocation', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2683,
  serialized_end=2772,
)


_ZINFOAPP = _descriptor.Descriptor(
  name='ZInfoApp',
  full_name='ZInfoApp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='AppID', full_name='ZInfoApp.AppID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='appVersion', full_name='ZInfoApp.appVersion', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='systemApp', full_name='ZInfoApp.systemApp', index=2,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='AppName', full_name='ZInfoApp.AppName', index=3,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='softwareList', full_name='ZInfoApp.softwareList', index=4,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bootTime', full_name='ZInfoApp.bootTime', index=5,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='assignedAdapters', full_name='ZInfoApp.assignedAdapters', index=6,
      number=13, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='appErr', full_name='ZInfoApp.appErr', index=7,
      number=14, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='ZInfoApp.state', index=8,
      number=15, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='network', full_name='ZInfoApp.network', index=9,
      number=16, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2775,
  serialized_end=3058,
)


_ZINFOVPNLINKINFO = _descriptor.Descriptor(
  name='ZInfoVpnLinkInfo',
  full_name='ZInfoVpnLinkInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='spiId', full_name='ZInfoVpnLinkInfo.spiId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='subNet', full_name='ZInfoVpnLinkInfo.subNet', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='direction', full_name='ZInfoVpnLinkInfo.direction', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3060,
  serialized_end=3128,
)


_ZINFOVPNLINK = _descriptor.Descriptor(
  name='ZInfoVpnLink',
  full_name='ZInfoVpnLink',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ZInfoVpnLink.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='ZInfoVpnLink.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reqId', full_name='ZInfoVpnLink.reqId', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='instTime', full_name='ZInfoVpnLink.instTime', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='espInfo', full_name='ZInfoVpnLink.espInfo', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='ZInfoVpnLink.state', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lInfo', full_name='ZInfoVpnLink.lInfo', index=6,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rInfo', full_name='ZInfoVpnLink.rInfo', index=7,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3131,
  serialized_end=3320,
)


_ZINFOVPNENDPOINT = _descriptor.Descriptor(
  name='ZInfoVpnEndPoint',
  full_name='ZInfoVpnEndPoint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ZInfoVpnEndPoint.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ipAddr', full_name='ZInfoVpnEndPoint.ipAddr', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='port', full_name='ZInfoVpnEndPoint.port', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3322,
  serialized_end=3382,
)


_ZINFOVPNCONN = _descriptor.Descriptor(
  name='ZInfoVpnConn',
  full_name='ZInfoVpnConn',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ZInfoVpnConn.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='ZInfoVpnConn.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='version', full_name='ZInfoVpnConn.version', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='estTime', full_name='ZInfoVpnConn.estTime', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ikes', full_name='ZInfoVpnConn.ikes', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='ZInfoVpnConn.state', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lInfo', full_name='ZInfoVpnConn.lInfo', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rInfo', full_name='ZInfoVpnConn.rInfo', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='links', full_name='ZInfoVpnConn.links', index=8,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3385,
  serialized_end=3602,
)


_ZINFOVPN = _descriptor.Descriptor(
  name='ZInfoVpn',
  full_name='ZInfoVpn',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='upTime', full_name='ZInfoVpn.upTime', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='policyBased', full_name='ZInfoVpn.policyBased', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='listeningIpAddrs', full_name='ZInfoVpn.listeningIpAddrs', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='conn', full_name='ZInfoVpn.conn', index=3,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3604,
  serialized_end=3706,
)


_RLOCSTATE = _descriptor.Descriptor(
  name='RlocState',
  full_name='RlocState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Rloc', full_name='RlocState.Rloc', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Reachable', full_name='RlocState.Reachable', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3708,
  serialized_end=3752,
)


_MAPCACHEENTRY = _descriptor.Descriptor(
  name='MapCacheEntry',
  full_name='MapCacheEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='EID', full_name='MapCacheEntry.EID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Rlocs', full_name='MapCacheEntry.Rlocs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3754,
  serialized_end=3809,
)


_DATABASEMAP = _descriptor.Descriptor(
  name='DatabaseMap',
  full_name='DatabaseMap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='IID', full_name='DatabaseMap.IID', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='MapCacheEntries', full_name='DatabaseMap.MapCacheEntries', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3811,
  serialized_end=3878,
)


_DECAPKEY = _descriptor.Descriptor(
  name='DecapKey',
  full_name='DecapKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Rloc', full_name='DecapKey.Rloc', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Port', full_name='DecapKey.Port', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='KeyCount', full_name='DecapKey.KeyCount', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3880,
  serialized_end=3936,
)


_ZINFOLISP = _descriptor.Descriptor(
  name='ZInfoLisp',
  full_name='ZInfoLisp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ItrCryptoPort', full_name='ZInfoLisp.ItrCryptoPort', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='EtrNatPort', full_name='ZInfoLisp.EtrNatPort', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Interfaces', full_name='ZInfoLisp.Interfaces', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DatabaseMaps', full_name='ZInfoLisp.DatabaseMaps', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DecapKeys', full_name='ZInfoLisp.DecapKeys', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3939,
  serialized_end=4079,
)


_ZINFOSERVICE = _descriptor.Descriptor(
  name='ZInfoService',
  full_name='ZInfoService',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='serviceID', full_name='ZInfoService.serviceID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='serviceName', full_name='ZInfoService.serviceName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='serviceType', full_name='ZInfoService.serviceType', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='softwareList', full_name='ZInfoService.softwareList', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='activated', full_name='ZInfoService.activated', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='upTimeStamp', full_name='ZInfoService.upTimeStamp', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='assignedAdapters', full_name='ZInfoService.assignedAdapters', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='svcErr', full_name='ZInfoService.svcErr', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='network', full_name='ZInfoService.network', index=8,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vinfo', full_name='ZInfoService.vinfo', index=9,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='linfo', full_name='ZInfoService.linfo', index=10,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='InfoContent', full_name='ZInfoService.InfoContent',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=4082,
  serialized_end=4427,
)


_ZINFONETWORKOBJECT = _descriptor.Descriptor(
  name='ZInfoNetworkObject',
  full_name='ZInfoNetworkObject',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='networkID', full_name='ZInfoNetworkObject.networkID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='networkType', full_name='ZInfoNetworkObject.networkType', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dhcpType', full_name='ZInfoNetworkObject.dhcpType', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='subnet', full_name='ZInfoNetworkObject.subnet', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='gateway', full_name='ZInfoNetworkObject.gateway', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='domainname', full_name='ZInfoNetworkObject.domainname', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ntpServer', full_name='ZInfoNetworkObject.ntpServer', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dnsServers', full_name='ZInfoNetworkObject.dnsServers', index=7,
      number=8, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dhcpRangeLow', full_name='ZInfoNetworkObject.dhcpRangeLow', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dhcpRangeHigh', full_name='ZInfoNetworkObject.dhcpRangeHigh', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bridgeNum', full_name='ZInfoNetworkObject.bridgeNum', index=10,
      number=12, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bridgeName', full_name='ZInfoNetworkObject.bridgeName', index=11,
      number=13, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bridgeIPAddr', full_name='ZInfoNetworkObject.bridgeIPAddr', index=12,
      number=14, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ipAssignments', full_name='ZInfoNetworkObject.ipAssignments', index=13,
      number=15, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bridgeIPSets', full_name='ZInfoNetworkObject.bridgeIPSets', index=14,
      number=16, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vifNames', full_name='ZInfoNetworkObject.vifNames', index=15,
      number=17, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ipv4Eid', full_name='ZInfoNetworkObject.ipv4Eid', index=16,
      number=18, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='networkErr', full_name='ZInfoNetworkObject.networkErr', index=17,
      number=19, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vifs', full_name='ZInfoNetworkObject.vifs', index=18,
      number=25, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4430,
  serialized_end=4870,
)


_ZINFONETWORKINSTANCE = _descriptor.Descriptor(
  name='ZInfoNetworkInstance',
  full_name='ZInfoNetworkInstance',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='networkID', full_name='ZInfoNetworkInstance.networkID', index=0,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='networkVersion', full_name='ZInfoNetworkInstance.networkVersion', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='instType', full_name='ZInfoNetworkInstance.instType', index=2,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='displayname', full_name='ZInfoNetworkInstance.displayname', index=3,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='activated', full_name='ZInfoNetworkInstance.activated', index=4,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='upTimeStamp', full_name='ZInfoNetworkInstance.upTimeStamp', index=5,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='softwareList', full_name='ZInfoNetworkInstance.softwareList', index=6,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bridgeNum', full_name='ZInfoNetworkInstance.bridgeNum', index=7,
      number=20, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bridgeName', full_name='ZInfoNetworkInstance.bridgeName', index=8,
      number=21, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bridgeIPAddr', full_name='ZInfoNetworkInstance.bridgeIPAddr', index=9,
      number=22, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ipAssignments', full_name='ZInfoNetworkInstance.ipAssignments', index=10,
      number=23, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bridgeIPSets', full_name='ZInfoNetworkInstance.bridgeIPSets', index=11,
      number=24, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vifs', full_name='ZInfoNetworkInstance.vifs', index=12,
      number=25, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ipv4Eid', full_name='ZInfoNetworkInstance.ipv4Eid', index=13,
      number=26, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='assignedAdapters', full_name='ZInfoNetworkInstance.assignedAdapters', index=14,
      number=30, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vinfo', full_name='ZInfoNetworkInstance.vinfo', index=15,
      number=31, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='linfo', full_name='ZInfoNetworkInstance.linfo', index=16,
      number=32, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='networkErr', full_name='ZInfoNetworkInstance.networkErr', index=17,
      number=40, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='InfoContent', full_name='ZInfoNetworkInstance.InfoContent',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=4873,
  serialized_end=5394,
)


_ZMETIPASSIGNMENTENTRY = _descriptor.Descriptor(
  name='ZmetIPAssignmentEntry',
  full_name='ZmetIPAssignmentEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='macAddress', full_name='ZmetIPAssignmentEntry.macAddress', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ipAddress', full_name='ZmetIPAssignmentEntry.ipAddress', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5396,
  serialized_end=5458,
)


_ZMETVIFINFO = _descriptor.Descriptor(
  name='ZmetVifInfo',
  full_name='ZmetVifInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='vifName', full_name='ZmetVifInfo.vifName', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='macAddress', full_name='ZmetVifInfo.macAddress', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='appID', full_name='ZmetVifInfo.appID', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5460,
  serialized_end=5525,
)


_ZINFOMSG = _descriptor.Descriptor(
  name='ZInfoMsg',
  full_name='ZInfoMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ztype', full_name='ZInfoMsg.ztype', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='devId', full_name='ZInfoMsg.devId', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dinfo', full_name='ZInfoMsg.dinfo', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ainfo', full_name='ZInfoMsg.ainfo', index=3,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sinfo', full_name='ZInfoMsg.sinfo', index=4,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ninfo', full_name='ZInfoMsg.ninfo', index=5,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='niinfo', full_name='ZInfoMsg.niinfo', index=6,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='atTimeStamp', full_name='ZInfoMsg.atTimeStamp', index=7,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='InfoContent', full_name='ZInfoMsg.InfoContent',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=5528,
  serialized_end=5815,
)


_ZIOBUNDLE = _descriptor.Descriptor(
  name='ZioBundle',
  full_name='ZioBundle',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='ZioBundle.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='ZioBundle.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='members', full_name='ZioBundle.members', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='usedByAppUUID', full_name='ZioBundle.usedByAppUUID', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='usedByBaseOS', full_name='ZioBundle.usedByBaseOS', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5817,
  serialized_end=5928,
)


_MEMORYMETRIC = _descriptor.Descriptor(
  name='memoryMetric',
  full_name='memoryMetric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='usedMem', full_name='memoryMetric.usedMem', index=0,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='availMem', full_name='memoryMetric.availMem', index=1,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='usedPercentage', full_name='memoryMetric.usedPercentage', index=2,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='availPercentage', full_name='memoryMetric.availPercentage', index=3,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5930,
  serialized_end=6028,
)


_NETWORKMETRIC = _descriptor.Descriptor(
  name='networkMetric',
  full_name='networkMetric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='iName', full_name='networkMetric.iName', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='txBytes', full_name='networkMetric.txBytes', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rxBytes', full_name='networkMetric.rxBytes', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='txDrops', full_name='networkMetric.txDrops', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rxDrops', full_name='networkMetric.rxDrops', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='txRate', full_name='networkMetric.txRate', index=5,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rxRate', full_name='networkMetric.rxRate', index=6,
      number=7, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='txPkts', full_name='networkMetric.txPkts', index=7,
      number=8, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rxPkts', full_name='networkMetric.rxPkts', index=8,
      number=9, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='txErrors', full_name='networkMetric.txErrors', index=9,
      number=10, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rxErrors', full_name='networkMetric.rxErrors', index=10,
      number=11, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='txAclDrops', full_name='networkMetric.txAclDrops', index=11,
      number=12, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rxAclDrops', full_name='networkMetric.rxAclDrops', index=12,
      number=13, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='txAclRateLimitDrops', full_name='networkMetric.txAclRateLimitDrops', index=13,
      number=14, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rxAclRateLimitDrops', full_name='networkMetric.rxAclRateLimitDrops', index=14,
      number=15, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='localName', full_name='networkMetric.localName', index=15,
      number=16, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6031,
  serialized_end=6346,
)


_ZEDCLOUDMETRIC = _descriptor.Descriptor(
  name='zedcloudMetric',
  full_name='zedcloudMetric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ifName', full_name='zedcloudMetric.ifName', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='failures', full_name='zedcloudMetric.failures', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='success', full_name='zedcloudMetric.success', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastFailure', full_name='zedcloudMetric.lastFailure', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastSuccess', full_name='zedcloudMetric.lastSuccess', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='urlMetrics', full_name='zedcloudMetric.urlMetrics', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6349,
  serialized_end=6551,
)


_URLCLOUDMETRIC = _descriptor.Descriptor(
  name='urlcloudMetric',
  full_name='urlcloudMetric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='url', full_name='urlcloudMetric.url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tryMsgCount', full_name='urlcloudMetric.tryMsgCount', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tryByteCount', full_name='urlcloudMetric.tryByteCount', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sentMsgCount', full_name='urlcloudMetric.sentMsgCount', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sentByteCount', full_name='urlcloudMetric.sentByteCount', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recvMsgCount', full_name='urlcloudMetric.recvMsgCount', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recvByteCount', full_name='urlcloudMetric.recvByteCount', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6554,
  serialized_end=6716,
)


_APPCPUMETRIC = _descriptor.Descriptor(
  name='appCpuMetric',
  full_name='appCpuMetric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='upTime', full_name='appCpuMetric.upTime', index=0,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='total', full_name='appCpuMetric.total', index=1,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6718,
  serialized_end=6791,
)


_DEVICEMETRIC = _descriptor.Descriptor(
  name='deviceMetric',
  full_name='deviceMetric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='memory', full_name='deviceMetric.memory', index=0,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='network', full_name='deviceMetric.network', index=1,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zedcloud', full_name='deviceMetric.zedcloud', index=2,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disk', full_name='deviceMetric.disk', index=3,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cpuMetric', full_name='deviceMetric.cpuMetric', index=4,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='metricItems', full_name='deviceMetric.metricItems', index=5,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='runtimeStorageOverheadMB', full_name='deviceMetric.runtimeStorageOverheadMB', index=6,
      number=9, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='appRunTimeStorageMB', full_name='deviceMetric.appRunTimeStorageMB', index=7,
      number=10, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='systemServicesMemoryMB', full_name='deviceMetric.systemServicesMemoryMB', index=8,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6794,
  serialized_end=7112,
)


_METRICITEM = _descriptor.Descriptor(
  name='MetricItem',
  full_name='MetricItem',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='MetricItem.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='MetricItem.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='boolValue', full_name='MetricItem.boolValue', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uint32Value', full_name='MetricItem.uint32Value', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uint64Value', full_name='MetricItem.uint64Value', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='floatValue', full_name='MetricItem.floatValue', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stringValue', full_name='MetricItem.stringValue', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='metricItemValue', full_name='MetricItem.metricItemValue',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=7115,
  serialized_end=7302,
)


_DISKMETRIC = _descriptor.Descriptor(
  name='diskMetric',
  full_name='diskMetric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='disk', full_name='diskMetric.disk', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mountPath', full_name='diskMetric.mountPath', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='readBytes', full_name='diskMetric.readBytes', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='writeBytes', full_name='diskMetric.writeBytes', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='readCount', full_name='diskMetric.readCount', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='writeCount', full_name='diskMetric.writeCount', index=5,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='total', full_name='diskMetric.total', index=6,
      number=7, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='used', full_name='diskMetric.used', index=7,
      number=8, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='free', full_name='diskMetric.free', index=8,
      number=9, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7305,
  serialized_end=7471,
)


_APPDISKMETRIC = _descriptor.Descriptor(
  name='appDiskMetric',
  full_name='appDiskMetric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='disk', full_name='appDiskMetric.disk', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='provisioned', full_name='appDiskMetric.provisioned', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='used', full_name='appDiskMetric.used', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='diskType', full_name='appDiskMetric.diskType', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dirty', full_name='appDiskMetric.dirty', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7473,
  serialized_end=7570,
)


_APPMETRIC = _descriptor.Descriptor(
  name='appMetric',
  full_name='appMetric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='AppID', full_name='appMetric.AppID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='appVersion', full_name='appMetric.appVersion', index=1,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='AppName', full_name='appMetric.AppName', index=2,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cpu', full_name='appMetric.cpu', index=3,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='memory', full_name='appMetric.memory', index=4,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='network', full_name='appMetric.network', index=5,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disk', full_name='appMetric.disk', index=6,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7573,
  serialized_end=7758,
)


_PKTSTAT = _descriptor.Descriptor(
  name='PktStat',
  full_name='PktStat',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Packets', full_name='PktStat.Packets', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Bytes', full_name='PktStat.Bytes', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7760,
  serialized_end=7801,
)


_RLOCSTATS = _descriptor.Descriptor(
  name='RlocStats',
  full_name='RlocStats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Rloc', full_name='RlocStats.Rloc', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Stats', full_name='RlocStats.Stats', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='SecondsSinceLastPacket', full_name='RlocStats.SecondsSinceLastPacket', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7803,
  serialized_end=7885,
)


_EIDSTATS = _descriptor.Descriptor(
  name='EidStats',
  full_name='EidStats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='IID', full_name='EidStats.IID', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='EID', full_name='EidStats.EID', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='RlocStatsEntries', full_name='EidStats.RlocStatsEntries', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7887,
  serialized_end=7961,
)


_ZMETRICLISP = _descriptor.Descriptor(
  name='ZMetricLisp',
  full_name='ZMetricLisp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='EidStatsEntries', full_name='ZMetricLisp.EidStatsEntries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ItrPacketSendError', full_name='ZMetricLisp.ItrPacketSendError', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='InvalidEidError', full_name='ZMetricLisp.InvalidEidError', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='NoDecryptKey', full_name='ZMetricLisp.NoDecryptKey', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='OuterHeaderError', full_name='ZMetricLisp.OuterHeaderError', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='BadInnerVersion', full_name='ZMetricLisp.BadInnerVersion', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='GoodPackets', full_name='ZMetricLisp.GoodPackets', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ICVError', full_name='ZMetricLisp.ICVError', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='LispHeaderError', full_name='ZMetricLisp.LispHeaderError', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='CheckSumError', full_name='ZMetricLisp.CheckSumError', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DecapReInjectError', full_name='ZMetricLisp.DecapReInjectError', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DecryptError', full_name='ZMetricLisp.DecryptError', index=11,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7964,
  serialized_end=8386,
)


_ZMETRICCONN = _descriptor.Descriptor(
  name='ZMetricConn',
  full_name='ZMetricConn',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='InPkts', full_name='ZMetricConn.InPkts', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='OutPkts', full_name='ZMetricConn.OutPkts', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ErrPkts', full_name='ZMetricConn.ErrPkts', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='CarierErrPkts', full_name='ZMetricConn.CarierErrPkts', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8388,
  serialized_end=8514,
)


_ZMETRICVPN = _descriptor.Descriptor(
  name='ZMetricVpn',
  full_name='ZMetricVpn',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ConnStat', full_name='ZMetricVpn.ConnStat', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='IkeStat', full_name='ZMetricVpn.IkeStat', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='NatTStat', full_name='ZMetricVpn.NatTStat', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='EspStat', full_name='ZMetricVpn.EspStat', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8517,
  serialized_end=8655,
)


_ZMETRICNONE = _descriptor.Descriptor(
  name='ZMetricNone',
  full_name='ZMetricNone',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8657,
  serialized_end=8670,
)


_ZMETRICFLOWLINK = _descriptor.Descriptor(
  name='ZMetricFlowLink',
  full_name='ZMetricFlowLink',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='subNet', full_name='ZMetricFlowLink.subNet', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='eid', full_name='ZMetricFlowLink.eid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='spiId', full_name='ZMetricFlowLink.spiId', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Link', full_name='ZMetricFlowLink.Link',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=8672,
  serialized_end=8745,
)


_ZMETRICFLOWENDPOINT = _descriptor.Descriptor(
  name='ZMetricFlowEndPoint',
  full_name='ZMetricFlowEndPoint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ipAddr', full_name='ZMetricFlowEndPoint.ipAddr', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rloc', full_name='ZMetricFlowEndPoint.rloc', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='link', full_name='ZMetricFlowEndPoint.link', index=2,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stats', full_name='ZMetricFlowEndPoint.stats', index=3,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Endpoint', full_name='ZMetricFlowEndPoint.Endpoint',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=8747,
  serialized_end=8871,
)


_ZMETRICFLOW = _descriptor.Descriptor(
  name='ZMetricFlow',
  full_name='ZMetricFlow',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ZMetricFlow.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='ZMetricFlow.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='ZMetricFlow.type', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='iid', full_name='ZMetricFlow.iid', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='estTime', full_name='ZMetricFlow.estTime', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lEndPoint', full_name='ZMetricFlow.lEndPoint', index=5,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rEndPoint', full_name='ZMetricFlow.rEndPoint', index=6,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8874,
  serialized_end=9039,
)


_ZMETRICLISPGLOBAL = _descriptor.Descriptor(
  name='ZMetricLispGlobal',
  full_name='ZMetricLispGlobal',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ItrPacketSendError', full_name='ZMetricLispGlobal.ItrPacketSendError', index=0,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='InvalidEidError', full_name='ZMetricLispGlobal.InvalidEidError', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='NoDecryptKey', full_name='ZMetricLispGlobal.NoDecryptKey', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='OuterHeaderError', full_name='ZMetricLispGlobal.OuterHeaderError', index=3,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='BadInnerVersion', full_name='ZMetricLispGlobal.BadInnerVersion', index=4,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='GoodPackets', full_name='ZMetricLispGlobal.GoodPackets', index=5,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ICVError', full_name='ZMetricLispGlobal.ICVError', index=6,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='LispHeaderError', full_name='ZMetricLispGlobal.LispHeaderError', index=7,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='CheckSumError', full_name='ZMetricLispGlobal.CheckSumError', index=8,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DecapReInjectError', full_name='ZMetricLispGlobal.DecapReInjectError', index=9,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='DecryptError', full_name='ZMetricLispGlobal.DecryptError', index=10,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9042,
  serialized_end=9434,
)


_ZMETRICSERVICE = _descriptor.Descriptor(
  name='ZMetricService',
  full_name='ZMetricService',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='serviceID', full_name='ZMetricService.serviceID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='serviceName', full_name='ZMetricService.serviceName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='serviceType', full_name='ZMetricService.serviceType', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='network', full_name='ZMetricService.network', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vpnm', full_name='ZMetricService.vpnm', index=4,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lispm', full_name='ZMetricService.lispm', index=5,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='flowStats', full_name='ZMetricService.flowStats', index=6,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lispGlobalStats', full_name='ZMetricService.lispGlobalStats', index=7,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='ServiceContent', full_name='ZMetricService.ServiceContent',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=9437,
  serialized_end=9703,
)


_NETWORKSTATS = _descriptor.Descriptor(
  name='NetworkStats',
  full_name='NetworkStats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='totalPackets', full_name='NetworkStats.totalPackets', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errors', full_name='NetworkStats.errors', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='drops', full_name='NetworkStats.drops', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='totalBytes', full_name='NetworkStats.totalBytes', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9705,
  serialized_end=9792,
)


_ZMETRICNETWORKSTATS = _descriptor.Descriptor(
  name='ZMetricNetworkStats',
  full_name='ZMetricNetworkStats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rx', full_name='ZMetricNetworkStats.rx', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tx', full_name='ZMetricNetworkStats.tx', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9794,
  serialized_end=9869,
)


_ZMETRICNETWORKINSTANCE = _descriptor.Descriptor(
  name='ZMetricNetworkInstance',
  full_name='ZMetricNetworkInstance',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='networkID', full_name='ZMetricNetworkInstance.networkID', index=0,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='networkVersion', full_name='ZMetricNetworkInstance.networkVersion', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='instType', full_name='ZMetricNetworkInstance.instType', index=2,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='displayname', full_name='ZMetricNetworkInstance.displayname', index=3,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='activated', full_name='ZMetricNetworkInstance.activated', index=4,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='network', full_name='ZMetricNetworkInstance.network', index=5,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vpnm', full_name='ZMetricNetworkInstance.vpnm', index=6,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lispm', full_name='ZMetricNetworkInstance.lispm', index=7,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nonem', full_name='ZMetricNetworkInstance.nonem', index=8,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='flowStats', full_name='ZMetricNetworkInstance.flowStats', index=9,
      number=30, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lispGlobalStats', full_name='ZMetricNetworkInstance.lispGlobalStats', index=10,
      number=31, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='networkStats', full_name='ZMetricNetworkInstance.networkStats', index=11,
      number=40, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='InstanceContent', full_name='ZMetricNetworkInstance.InstanceContent',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=9872,
  serialized_end=10262,
)


_ZMETRICMSG = _descriptor.Descriptor(
  name='ZMetricMsg',
  full_name='ZMetricMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='devID', full_name='ZMetricMsg.devID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='atTimeStamp', full_name='ZMetricMsg.atTimeStamp', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dm', full_name='ZMetricMsg.dm', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='am', full_name='ZMetricMsg.am', index=3,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sm', full_name='ZMetricMsg.sm', index=4,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nm', full_name='ZMetricMsg.nm', index=5,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='MetricContent', full_name='ZMetricMsg.MetricContent',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=10265,
  serialized_end=10477,
)

_ZINFONETWORK.fields_by_name['dns'].message_type = _ZINFODNS
_ZINFONETWORK.fields_by_name['location'].message_type = _GEOLOC
_ZINFONETWORK.fields_by_name['networkErr'].message_type = _ERRORINFO
_ZINFONETWORK.fields_by_name['proxy'].message_type = _PROXYSTATUS
_ZINFOPERIPHERAL.fields_by_name['ztype'].enum_type = _ZPERIPHERALTYPES
_ZINFOPERIPHERAL.fields_by_name['minfo'].message_type = _ZINFOMANUFACTURER
_ZINFOSW.fields_by_name['state'].enum_type = _ZSWSTATE
_ERRORINFO.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_ZINFODEVICE.fields_by_name['minfo'].message_type = _ZINFOMANUFACTURER
_ZINFODEVICE.fields_by_name['network'].message_type = _ZINFONETWORK
_ZINFODEVICE.fields_by_name['assignableAdapters'].message_type = _ZIOBUNDLE
_ZINFODEVICE.fields_by_name['dns'].message_type = _ZINFODNS
_ZINFODEVICE.fields_by_name['storageList'].message_type = _ZINFOSTORAGE
_ZINFODEVICE.fields_by_name['bootTime'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_ZINFODEVICE.fields_by_name['swList'].message_type = _ZINFODEVSW
_ZINFODEVICE.fields_by_name['metricItems'].message_type = _METRICITEM
_ZINFODEVICE.fields_by_name['lastRebootTime'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_ZINFODEVICE.fields_by_name['systemAdapter'].message_type = _SYSTEMADAPTERINFO
_SYSTEMADAPTERINFO.fields_by_name['status'].message_type = _DEVICEPORTSTATUS
_DEVICEPORTSTATUS.fields_by_name['timePriority'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_DEVICEPORTSTATUS.fields_by_name['lastFailed'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_DEVICEPORTSTATUS.fields_by_name['lastSucceeded'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_DEVICEPORTSTATUS.fields_by_name['ports'].message_type = _DEVICEPORT
_DEVICEPORT.fields_by_name['proxy'].message_type = _PROXYSTATUS
_PROXYSTATUS.fields_by_name['proxies'].message_type = _PROXYENTRY
_ZINFODEVSW.fields_by_name['status'].enum_type = _ZSWSTATE
_ZINFODEVSW.fields_by_name['swErr'].message_type = _ERRORINFO
_ZINFODEVSW.fields_by_name['userStatus'].enum_type = _BASEOSSTATUS
_ZINFOAPP.fields_by_name['softwareList'].message_type = _ZINFOSW
_ZINFOAPP.fields_by_name['bootTime'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_ZINFOAPP.fields_by_name['assignedAdapters'].message_type = _ZIOBUNDLE
_ZINFOAPP.fields_by_name['appErr'].message_type = _ERRORINFO
_ZINFOAPP.fields_by_name['state'].enum_type = _ZSWSTATE
_ZINFOAPP.fields_by_name['network'].message_type = _ZINFONETWORK
_ZINFOVPNLINK.fields_by_name['state'].enum_type = _ZINFOVPNSTATE
_ZINFOVPNLINK.fields_by_name['lInfo'].message_type = _ZINFOVPNLINKINFO
_ZINFOVPNLINK.fields_by_name['rInfo'].message_type = _ZINFOVPNLINKINFO
_ZINFOVPNCONN.fields_by_name['state'].enum_type = _ZINFOVPNSTATE
_ZINFOVPNCONN.fields_by_name['lInfo'].message_type = _ZINFOVPNENDPOINT
_ZINFOVPNCONN.fields_by_name['rInfo'].message_type = _ZINFOVPNENDPOINT
_ZINFOVPNCONN.fields_by_name['links'].message_type = _ZINFOVPNLINK
_ZINFOVPN.fields_by_name['conn'].message_type = _ZINFOVPNCONN
_MAPCACHEENTRY.fields_by_name['Rlocs'].message_type = _RLOCSTATE
_DATABASEMAP.fields_by_name['MapCacheEntries'].message_type = _MAPCACHEENTRY
_ZINFOLISP.fields_by_name['DatabaseMaps'].message_type = _DATABASEMAP
_ZINFOLISP.fields_by_name['DecapKeys'].message_type = _DECAPKEY
_ZINFOSERVICE.fields_by_name['softwareList'].message_type = _ZINFOSW
_ZINFOSERVICE.fields_by_name['upTimeStamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_ZINFOSERVICE.fields_by_name['assignedAdapters'].message_type = _ZIOBUNDLE
_ZINFOSERVICE.fields_by_name['svcErr'].message_type = _ERRORINFO
_ZINFOSERVICE.fields_by_name['network'].message_type = _ZINFONETWORK
_ZINFOSERVICE.fields_by_name['vinfo'].message_type = _ZINFOVPN
_ZINFOSERVICE.fields_by_name['linfo'].message_type = _ZINFOLISP
_ZINFOSERVICE.oneofs_by_name['InfoContent'].fields.append(
  _ZINFOSERVICE.fields_by_name['vinfo'])
_ZINFOSERVICE.fields_by_name['vinfo'].containing_oneof = _ZINFOSERVICE.oneofs_by_name['InfoContent']
_ZINFOSERVICE.oneofs_by_name['InfoContent'].fields.append(
  _ZINFOSERVICE.fields_by_name['linfo'])
_ZINFOSERVICE.fields_by_name['linfo'].containing_oneof = _ZINFOSERVICE.oneofs_by_name['InfoContent']
_ZINFONETWORKOBJECT.fields_by_name['ipAssignments'].message_type = _ZMETIPASSIGNMENTENTRY
_ZINFONETWORKOBJECT.fields_by_name['networkErr'].message_type = _ERRORINFO
_ZINFONETWORKOBJECT.fields_by_name['vifs'].message_type = _ZMETVIFINFO
_ZINFONETWORKINSTANCE.fields_by_name['upTimeStamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_ZINFONETWORKINSTANCE.fields_by_name['softwareList'].message_type = _ZINFOSW
_ZINFONETWORKINSTANCE.fields_by_name['ipAssignments'].message_type = _ZMETIPASSIGNMENTENTRY
_ZINFONETWORKINSTANCE.fields_by_name['vifs'].message_type = _ZMETVIFINFO
_ZINFONETWORKINSTANCE.fields_by_name['assignedAdapters'].message_type = _ZIOBUNDLE
_ZINFONETWORKINSTANCE.fields_by_name['vinfo'].message_type = _ZINFOVPN
_ZINFONETWORKINSTANCE.fields_by_name['linfo'].message_type = _ZINFOLISP
_ZINFONETWORKINSTANCE.fields_by_name['networkErr'].message_type = _ERRORINFO
_ZINFONETWORKINSTANCE.oneofs_by_name['InfoContent'].fields.append(
  _ZINFONETWORKINSTANCE.fields_by_name['vinfo'])
_ZINFONETWORKINSTANCE.fields_by_name['vinfo'].containing_oneof = _ZINFONETWORKINSTANCE.oneofs_by_name['InfoContent']
_ZINFONETWORKINSTANCE.oneofs_by_name['InfoContent'].fields.append(
  _ZINFONETWORKINSTANCE.fields_by_name['linfo'])
_ZINFONETWORKINSTANCE.fields_by_name['linfo'].containing_oneof = _ZINFONETWORKINSTANCE.oneofs_by_name['InfoContent']
_ZINFOMSG.fields_by_name['ztype'].enum_type = _ZINFOTYPES
_ZINFOMSG.fields_by_name['dinfo'].message_type = _ZINFODEVICE
_ZINFOMSG.fields_by_name['ainfo'].message_type = _ZINFOAPP
_ZINFOMSG.fields_by_name['sinfo'].message_type = _ZINFOSERVICE
_ZINFOMSG.fields_by_name['ninfo'].message_type = _ZINFONETWORKOBJECT
_ZINFOMSG.fields_by_name['niinfo'].message_type = _ZINFONETWORKINSTANCE
_ZINFOMSG.fields_by_name['atTimeStamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_ZINFOMSG.oneofs_by_name['InfoContent'].fields.append(
  _ZINFOMSG.fields_by_name['dinfo'])
_ZINFOMSG.fields_by_name['dinfo'].containing_oneof = _ZINFOMSG.oneofs_by_name['InfoContent']
_ZINFOMSG.oneofs_by_name['InfoContent'].fields.append(
  _ZINFOMSG.fields_by_name['ainfo'])
_ZINFOMSG.fields_by_name['ainfo'].containing_oneof = _ZINFOMSG.oneofs_by_name['InfoContent']
_ZINFOMSG.oneofs_by_name['InfoContent'].fields.append(
  _ZINFOMSG.fields_by_name['sinfo'])
_ZINFOMSG.fields_by_name['sinfo'].containing_oneof = _ZINFOMSG.oneofs_by_name['InfoContent']
_ZINFOMSG.oneofs_by_name['InfoContent'].fields.append(
  _ZINFOMSG.fields_by_name['ninfo'])
_ZINFOMSG.fields_by_name['ninfo'].containing_oneof = _ZINFOMSG.oneofs_by_name['InfoContent']
_ZINFOMSG.oneofs_by_name['InfoContent'].fields.append(
  _ZINFOMSG.fields_by_name['niinfo'])
_ZINFOMSG.fields_by_name['niinfo'].containing_oneof = _ZINFOMSG.oneofs_by_name['InfoContent']
_ZIOBUNDLE.fields_by_name['type'].enum_type = _ZIOTYPE
_ZEDCLOUDMETRIC.fields_by_name['lastFailure'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_ZEDCLOUDMETRIC.fields_by_name['lastSuccess'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_ZEDCLOUDMETRIC.fields_by_name['urlMetrics'].message_type = _URLCLOUDMETRIC
_APPCPUMETRIC.fields_by_name['upTime'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_DEVICEMETRIC.fields_by_name['memory'].message_type = _MEMORYMETRIC
_DEVICEMETRIC.fields_by_name['network'].message_type = _NETWORKMETRIC
_DEVICEMETRIC.fields_by_name['zedcloud'].message_type = _ZEDCLOUDMETRIC
_DEVICEMETRIC.fields_by_name['disk'].message_type = _DISKMETRIC
_DEVICEMETRIC.fields_by_name['cpuMetric'].message_type = _APPCPUMETRIC
_DEVICEMETRIC.fields_by_name['metricItems'].message_type = _METRICITEM
_DEVICEMETRIC.fields_by_name['systemServicesMemoryMB'].message_type = _MEMORYMETRIC
_METRICITEM.fields_by_name['type'].enum_type = _METRICITEMTYPE
_METRICITEM.oneofs_by_name['metricItemValue'].fields.append(
  _METRICITEM.fields_by_name['boolValue'])
_METRICITEM.fields_by_name['boolValue'].containing_oneof = _METRICITEM.oneofs_by_name['metricItemValue']
_METRICITEM.oneofs_by_name['metricItemValue'].fields.append(
  _METRICITEM.fields_by_name['uint32Value'])
_METRICITEM.fields_by_name['uint32Value'].containing_oneof = _METRICITEM.oneofs_by_name['metricItemValue']
_METRICITEM.oneofs_by_name['metricItemValue'].fields.append(
  _METRICITEM.fields_by_name['uint64Value'])
_METRICITEM.fields_by_name['uint64Value'].containing_oneof = _METRICITEM.oneofs_by_name['metricItemValue']
_METRICITEM.oneofs_by_name['metricItemValue'].fields.append(
  _METRICITEM.fields_by_name['floatValue'])
_METRICITEM.fields_by_name['floatValue'].containing_oneof = _METRICITEM.oneofs_by_name['metricItemValue']
_METRICITEM.oneofs_by_name['metricItemValue'].fields.append(
  _METRICITEM.fields_by_name['stringValue'])
_METRICITEM.fields_by_name['stringValue'].containing_oneof = _METRICITEM.oneofs_by_name['metricItemValue']
_APPMETRIC.fields_by_name['cpu'].message_type = _APPCPUMETRIC
_APPMETRIC.fields_by_name['memory'].message_type = _MEMORYMETRIC
_APPMETRIC.fields_by_name['network'].message_type = _NETWORKMETRIC
_APPMETRIC.fields_by_name['disk'].message_type = _APPDISKMETRIC
_RLOCSTATS.fields_by_name['Stats'].message_type = _PKTSTAT
_EIDSTATS.fields_by_name['RlocStatsEntries'].message_type = _RLOCSTATS
_ZMETRICLISP.fields_by_name['EidStatsEntries'].message_type = _EIDSTATS
_ZMETRICLISP.fields_by_name['ItrPacketSendError'].message_type = _PKTSTAT
_ZMETRICLISP.fields_by_name['InvalidEidError'].message_type = _PKTSTAT
_ZMETRICLISP.fields_by_name['NoDecryptKey'].message_type = _PKTSTAT
_ZMETRICLISP.fields_by_name['OuterHeaderError'].message_type = _PKTSTAT
_ZMETRICLISP.fields_by_name['BadInnerVersion'].message_type = _PKTSTAT
_ZMETRICLISP.fields_by_name['GoodPackets'].message_type = _PKTSTAT
_ZMETRICLISP.fields_by_name['ICVError'].message_type = _PKTSTAT
_ZMETRICLISP.fields_by_name['LispHeaderError'].message_type = _PKTSTAT
_ZMETRICLISP.fields_by_name['CheckSumError'].message_type = _PKTSTAT
_ZMETRICLISP.fields_by_name['DecapReInjectError'].message_type = _PKTSTAT
_ZMETRICLISP.fields_by_name['DecryptError'].message_type = _PKTSTAT
_ZMETRICCONN.fields_by_name['InPkts'].message_type = _PKTSTAT
_ZMETRICCONN.fields_by_name['OutPkts'].message_type = _PKTSTAT
_ZMETRICCONN.fields_by_name['ErrPkts'].message_type = _PKTSTAT
_ZMETRICCONN.fields_by_name['CarierErrPkts'].message_type = _PKTSTAT
_ZMETRICVPN.fields_by_name['ConnStat'].message_type = _ZMETRICCONN
_ZMETRICVPN.fields_by_name['IkeStat'].message_type = _ZMETRICCONN
_ZMETRICVPN.fields_by_name['NatTStat'].message_type = _ZMETRICCONN
_ZMETRICVPN.fields_by_name['EspStat'].message_type = _ZMETRICCONN
_ZMETRICFLOWLINK.oneofs_by_name['Link'].fields.append(
  _ZMETRICFLOWLINK.fields_by_name['subNet'])
_ZMETRICFLOWLINK.fields_by_name['subNet'].containing_oneof = _ZMETRICFLOWLINK.oneofs_by_name['Link']
_ZMETRICFLOWLINK.oneofs_by_name['Link'].fields.append(
  _ZMETRICFLOWLINK.fields_by_name['eid'])
_ZMETRICFLOWLINK.fields_by_name['eid'].containing_oneof = _ZMETRICFLOWLINK.oneofs_by_name['Link']
_ZMETRICFLOWENDPOINT.fields_by_name['link'].message_type = _ZMETRICFLOWLINK
_ZMETRICFLOWENDPOINT.fields_by_name['stats'].message_type = _PKTSTAT
_ZMETRICFLOWENDPOINT.oneofs_by_name['Endpoint'].fields.append(
  _ZMETRICFLOWENDPOINT.fields_by_name['ipAddr'])
_ZMETRICFLOWENDPOINT.fields_by_name['ipAddr'].containing_oneof = _ZMETRICFLOWENDPOINT.oneofs_by_name['Endpoint']
_ZMETRICFLOWENDPOINT.oneofs_by_name['Endpoint'].fields.append(
  _ZMETRICFLOWENDPOINT.fields_by_name['rloc'])
_ZMETRICFLOWENDPOINT.fields_by_name['rloc'].containing_oneof = _ZMETRICFLOWENDPOINT.oneofs_by_name['Endpoint']
_ZMETRICFLOW.fields_by_name['lEndPoint'].message_type = _ZMETRICFLOWENDPOINT
_ZMETRICFLOW.fields_by_name['rEndPoint'].message_type = _ZMETRICFLOWENDPOINT
_ZMETRICLISPGLOBAL.fields_by_name['ItrPacketSendError'].message_type = _PKTSTAT
_ZMETRICLISPGLOBAL.fields_by_name['InvalidEidError'].message_type = _PKTSTAT
_ZMETRICLISPGLOBAL.fields_by_name['NoDecryptKey'].message_type = _PKTSTAT
_ZMETRICLISPGLOBAL.fields_by_name['OuterHeaderError'].message_type = _PKTSTAT
_ZMETRICLISPGLOBAL.fields_by_name['BadInnerVersion'].message_type = _PKTSTAT
_ZMETRICLISPGLOBAL.fields_by_name['GoodPackets'].message_type = _PKTSTAT
_ZMETRICLISPGLOBAL.fields_by_name['ICVError'].message_type = _PKTSTAT
_ZMETRICLISPGLOBAL.fields_by_name['LispHeaderError'].message_type = _PKTSTAT
_ZMETRICLISPGLOBAL.fields_by_name['CheckSumError'].message_type = _PKTSTAT
_ZMETRICLISPGLOBAL.fields_by_name['DecapReInjectError'].message_type = _PKTSTAT
_ZMETRICLISPGLOBAL.fields_by_name['DecryptError'].message_type = _PKTSTAT
_ZMETRICSERVICE.fields_by_name['network'].message_type = _NETWORKMETRIC
_ZMETRICSERVICE.fields_by_name['vpnm'].message_type = _ZMETRICVPN
_ZMETRICSERVICE.fields_by_name['lispm'].message_type = _ZMETRICLISP
_ZMETRICSERVICE.fields_by_name['flowStats'].message_type = _ZMETRICFLOW
_ZMETRICSERVICE.fields_by_name['lispGlobalStats'].message_type = _ZMETRICLISPGLOBAL
_ZMETRICSERVICE.oneofs_by_name['ServiceContent'].fields.append(
  _ZMETRICSERVICE.fields_by_name['vpnm'])
_ZMETRICSERVICE.fields_by_name['vpnm'].containing_oneof = _ZMETRICSERVICE.oneofs_by_name['ServiceContent']
_ZMETRICSERVICE.oneofs_by_name['ServiceContent'].fields.append(
  _ZMETRICSERVICE.fields_by_name['lispm'])
_ZMETRICSERVICE.fields_by_name['lispm'].containing_oneof = _ZMETRICSERVICE.oneofs_by_name['ServiceContent']
_ZMETRICNETWORKSTATS.fields_by_name['rx'].message_type = _NETWORKSTATS
_ZMETRICNETWORKSTATS.fields_by_name['tx'].message_type = _NETWORKSTATS
_ZMETRICNETWORKINSTANCE.fields_by_name['network'].message_type = _NETWORKMETRIC
_ZMETRICNETWORKINSTANCE.fields_by_name['vpnm'].message_type = _ZMETRICVPN
_ZMETRICNETWORKINSTANCE.fields_by_name['lispm'].message_type = _ZMETRICLISP
_ZMETRICNETWORKINSTANCE.fields_by_name['nonem'].message_type = _ZMETRICNONE
_ZMETRICNETWORKINSTANCE.fields_by_name['flowStats'].message_type = _ZMETRICFLOW
_ZMETRICNETWORKINSTANCE.fields_by_name['lispGlobalStats'].message_type = _ZMETRICLISPGLOBAL
_ZMETRICNETWORKINSTANCE.fields_by_name['networkStats'].message_type = _ZMETRICNETWORKSTATS
_ZMETRICNETWORKINSTANCE.oneofs_by_name['InstanceContent'].fields.append(
  _ZMETRICNETWORKINSTANCE.fields_by_name['vpnm'])
_ZMETRICNETWORKINSTANCE.fields_by_name['vpnm'].containing_oneof = _ZMETRICNETWORKINSTANCE.oneofs_by_name['InstanceContent']
_ZMETRICNETWORKINSTANCE.oneofs_by_name['InstanceContent'].fields.append(
  _ZMETRICNETWORKINSTANCE.fields_by_name['lispm'])
_ZMETRICNETWORKINSTANCE.fields_by_name['lispm'].containing_oneof = _ZMETRICNETWORKINSTANCE.oneofs_by_name['InstanceContent']
_ZMETRICNETWORKINSTANCE.oneofs_by_name['InstanceContent'].fields.append(
  _ZMETRICNETWORKINSTANCE.fields_by_name['nonem'])
_ZMETRICNETWORKINSTANCE.fields_by_name['nonem'].containing_oneof = _ZMETRICNETWORKINSTANCE.oneofs_by_name['InstanceContent']
_ZMETRICMSG.fields_by_name['atTimeStamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_ZMETRICMSG.fields_by_name['dm'].message_type = _DEVICEMETRIC
_ZMETRICMSG.fields_by_name['am'].message_type = _APPMETRIC
_ZMETRICMSG.fields_by_name['sm'].message_type = _ZMETRICSERVICE
_ZMETRICMSG.fields_by_name['nm'].message_type = _ZMETRICNETWORKINSTANCE
_ZMETRICMSG.oneofs_by_name['MetricContent'].fields.append(
  _ZMETRICMSG.fields_by_name['dm'])
_ZMETRICMSG.fields_by_name['dm'].containing_oneof = _ZMETRICMSG.oneofs_by_name['MetricContent']
DESCRIPTOR.message_types_by_name['ZInfoManufacturer'] = _ZINFOMANUFACTURER
DESCRIPTOR.message_types_by_name['ZInfoNetwork'] = _ZINFONETWORK
DESCRIPTOR.message_types_by_name['GeoLoc'] = _GEOLOC
DESCRIPTOR.message_types_by_name['ZInfoDNS'] = _ZINFODNS
DESCRIPTOR.message_types_by_name['ZinfoPeripheral'] = _ZINFOPERIPHERAL
DESCRIPTOR.message_types_by_name['ZInfoSW'] = _ZINFOSW
DESCRIPTOR.message_types_by_name['ErrorInfo'] = _ERRORINFO
DESCRIPTOR.message_types_by_name['ZInfoDevice'] = _ZINFODEVICE
DESCRIPTOR.message_types_by_name['SystemAdapterInfo'] = _SYSTEMADAPTERINFO
DESCRIPTOR.message_types_by_name['DevicePortStatus'] = _DEVICEPORTSTATUS
DESCRIPTOR.message_types_by_name['DevicePort'] = _DEVICEPORT
DESCRIPTOR.message_types_by_name['ProxyStatus'] = _PROXYSTATUS
DESCRIPTOR.message_types_by_name['ProxyEntry'] = _PROXYENTRY
DESCRIPTOR.message_types_by_name['ZInfoDevSW'] = _ZINFODEVSW
DESCRIPTOR.message_types_by_name['ZInfoStorage'] = _ZINFOSTORAGE
DESCRIPTOR.message_types_by_name['ZInfoApp'] = _ZINFOAPP
DESCRIPTOR.message_types_by_name['ZInfoVpnLinkInfo'] = _ZINFOVPNLINKINFO
DESCRIPTOR.message_types_by_name['ZInfoVpnLink'] = _ZINFOVPNLINK
DESCRIPTOR.message_types_by_name['ZInfoVpnEndPoint'] = _ZINFOVPNENDPOINT
DESCRIPTOR.message_types_by_name['ZInfoVpnConn'] = _ZINFOVPNCONN
DESCRIPTOR.message_types_by_name['ZInfoVpn'] = _ZINFOVPN
DESCRIPTOR.message_types_by_name['RlocState'] = _RLOCSTATE
DESCRIPTOR.message_types_by_name['MapCacheEntry'] = _MAPCACHEENTRY
DESCRIPTOR.message_types_by_name['DatabaseMap'] = _DATABASEMAP
DESCRIPTOR.message_types_by_name['DecapKey'] = _DECAPKEY
DESCRIPTOR.message_types_by_name['ZInfoLisp'] = _ZINFOLISP
DESCRIPTOR.message_types_by_name['ZInfoService'] = _ZINFOSERVICE
DESCRIPTOR.message_types_by_name['ZInfoNetworkObject'] = _ZINFONETWORKOBJECT
DESCRIPTOR.message_types_by_name['ZInfoNetworkInstance'] = _ZINFONETWORKINSTANCE
DESCRIPTOR.message_types_by_name['ZmetIPAssignmentEntry'] = _ZMETIPASSIGNMENTENTRY
DESCRIPTOR.message_types_by_name['ZmetVifInfo'] = _ZMETVIFINFO
DESCRIPTOR.message_types_by_name['ZInfoMsg'] = _ZINFOMSG
DESCRIPTOR.message_types_by_name['ZioBundle'] = _ZIOBUNDLE
DESCRIPTOR.message_types_by_name['memoryMetric'] = _MEMORYMETRIC
DESCRIPTOR.message_types_by_name['networkMetric'] = _NETWORKMETRIC
DESCRIPTOR.message_types_by_name['zedcloudMetric'] = _ZEDCLOUDMETRIC
DESCRIPTOR.message_types_by_name['urlcloudMetric'] = _URLCLOUDMETRIC
DESCRIPTOR.message_types_by_name['appCpuMetric'] = _APPCPUMETRIC
DESCRIPTOR.message_types_by_name['deviceMetric'] = _DEVICEMETRIC
DESCRIPTOR.message_types_by_name['MetricItem'] = _METRICITEM
DESCRIPTOR.message_types_by_name['diskMetric'] = _DISKMETRIC
DESCRIPTOR.message_types_by_name['appDiskMetric'] = _APPDISKMETRIC
DESCRIPTOR.message_types_by_name['appMetric'] = _APPMETRIC
DESCRIPTOR.message_types_by_name['PktStat'] = _PKTSTAT
DESCRIPTOR.message_types_by_name['RlocStats'] = _RLOCSTATS
DESCRIPTOR.message_types_by_name['EidStats'] = _EIDSTATS
DESCRIPTOR.message_types_by_name['ZMetricLisp'] = _ZMETRICLISP
DESCRIPTOR.message_types_by_name['ZMetricConn'] = _ZMETRICCONN
DESCRIPTOR.message_types_by_name['ZMetricVpn'] = _ZMETRICVPN
DESCRIPTOR.message_types_by_name['ZMetricNone'] = _ZMETRICNONE
DESCRIPTOR.message_types_by_name['ZMetricFlowLink'] = _ZMETRICFLOWLINK
DESCRIPTOR.message_types_by_name['ZMetricFlowEndPoint'] = _ZMETRICFLOWENDPOINT
DESCRIPTOR.message_types_by_name['ZMetricFlow'] = _ZMETRICFLOW
DESCRIPTOR.message_types_by_name['ZMetricLispGlobal'] = _ZMETRICLISPGLOBAL
DESCRIPTOR.message_types_by_name['ZMetricService'] = _ZMETRICSERVICE
DESCRIPTOR.message_types_by_name['NetworkStats'] = _NETWORKSTATS
DESCRIPTOR.message_types_by_name['ZMetricNetworkStats'] = _ZMETRICNETWORKSTATS
DESCRIPTOR.message_types_by_name['ZMetricNetworkInstance'] = _ZMETRICNETWORKINSTANCE
DESCRIPTOR.message_types_by_name['ZMetricMsg'] = _ZMETRICMSG
DESCRIPTOR.enum_types_by_name['ZInfoTypes'] = _ZINFOTYPES
DESCRIPTOR.enum_types_by_name['ZPeripheralTypes'] = _ZPERIPHERALTYPES
DESCRIPTOR.enum_types_by_name['ZSwState'] = _ZSWSTATE
DESCRIPTOR.enum_types_by_name['BaseOsStatus'] = _BASEOSSTATUS
DESCRIPTOR.enum_types_by_name['ZInfoVpnState'] = _ZINFOVPNSTATE
DESCRIPTOR.enum_types_by_name['ZioType'] = _ZIOTYPE
DESCRIPTOR.enum_types_by_name['ZmetricTypes'] = _ZMETRICTYPES
DESCRIPTOR.enum_types_by_name['MetricItemType'] = _METRICITEMTYPE

ZInfoManufacturer = _reflection.GeneratedProtocolMessageType('ZInfoManufacturer', (_message.Message,), dict(
  DESCRIPTOR = _ZINFOMANUFACTURER,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoManufacturer)
  ))
_sym_db.RegisterMessage(ZInfoManufacturer)

ZInfoNetwork = _reflection.GeneratedProtocolMessageType('ZInfoNetwork', (_message.Message,), dict(
  DESCRIPTOR = _ZINFONETWORK,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoNetwork)
  ))
_sym_db.RegisterMessage(ZInfoNetwork)

GeoLoc = _reflection.GeneratedProtocolMessageType('GeoLoc', (_message.Message,), dict(
  DESCRIPTOR = _GEOLOC,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:GeoLoc)
  ))
_sym_db.RegisterMessage(GeoLoc)

ZInfoDNS = _reflection.GeneratedProtocolMessageType('ZInfoDNS', (_message.Message,), dict(
  DESCRIPTOR = _ZINFODNS,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoDNS)
  ))
_sym_db.RegisterMessage(ZInfoDNS)

ZinfoPeripheral = _reflection.GeneratedProtocolMessageType('ZinfoPeripheral', (_message.Message,), dict(
  DESCRIPTOR = _ZINFOPERIPHERAL,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZinfoPeripheral)
  ))
_sym_db.RegisterMessage(ZinfoPeripheral)

ZInfoSW = _reflection.GeneratedProtocolMessageType('ZInfoSW', (_message.Message,), dict(
  DESCRIPTOR = _ZINFOSW,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoSW)
  ))
_sym_db.RegisterMessage(ZInfoSW)

ErrorInfo = _reflection.GeneratedProtocolMessageType('ErrorInfo', (_message.Message,), dict(
  DESCRIPTOR = _ERRORINFO,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ErrorInfo)
  ))
_sym_db.RegisterMessage(ErrorInfo)

ZInfoDevice = _reflection.GeneratedProtocolMessageType('ZInfoDevice', (_message.Message,), dict(
  DESCRIPTOR = _ZINFODEVICE,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoDevice)
  ))
_sym_db.RegisterMessage(ZInfoDevice)

SystemAdapterInfo = _reflection.GeneratedProtocolMessageType('SystemAdapterInfo', (_message.Message,), dict(
  DESCRIPTOR = _SYSTEMADAPTERINFO,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:SystemAdapterInfo)
  ))
_sym_db.RegisterMessage(SystemAdapterInfo)

DevicePortStatus = _reflection.GeneratedProtocolMessageType('DevicePortStatus', (_message.Message,), dict(
  DESCRIPTOR = _DEVICEPORTSTATUS,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:DevicePortStatus)
  ))
_sym_db.RegisterMessage(DevicePortStatus)

DevicePort = _reflection.GeneratedProtocolMessageType('DevicePort', (_message.Message,), dict(
  DESCRIPTOR = _DEVICEPORT,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:DevicePort)
  ))
_sym_db.RegisterMessage(DevicePort)

ProxyStatus = _reflection.GeneratedProtocolMessageType('ProxyStatus', (_message.Message,), dict(
  DESCRIPTOR = _PROXYSTATUS,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ProxyStatus)
  ))
_sym_db.RegisterMessage(ProxyStatus)

ProxyEntry = _reflection.GeneratedProtocolMessageType('ProxyEntry', (_message.Message,), dict(
  DESCRIPTOR = _PROXYENTRY,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ProxyEntry)
  ))
_sym_db.RegisterMessage(ProxyEntry)

ZInfoDevSW = _reflection.GeneratedProtocolMessageType('ZInfoDevSW', (_message.Message,), dict(
  DESCRIPTOR = _ZINFODEVSW,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoDevSW)
  ))
_sym_db.RegisterMessage(ZInfoDevSW)

ZInfoStorage = _reflection.GeneratedProtocolMessageType('ZInfoStorage', (_message.Message,), dict(
  DESCRIPTOR = _ZINFOSTORAGE,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoStorage)
  ))
_sym_db.RegisterMessage(ZInfoStorage)

ZInfoApp = _reflection.GeneratedProtocolMessageType('ZInfoApp', (_message.Message,), dict(
  DESCRIPTOR = _ZINFOAPP,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoApp)
  ))
_sym_db.RegisterMessage(ZInfoApp)

ZInfoVpnLinkInfo = _reflection.GeneratedProtocolMessageType('ZInfoVpnLinkInfo', (_message.Message,), dict(
  DESCRIPTOR = _ZINFOVPNLINKINFO,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoVpnLinkInfo)
  ))
_sym_db.RegisterMessage(ZInfoVpnLinkInfo)

ZInfoVpnLink = _reflection.GeneratedProtocolMessageType('ZInfoVpnLink', (_message.Message,), dict(
  DESCRIPTOR = _ZINFOVPNLINK,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoVpnLink)
  ))
_sym_db.RegisterMessage(ZInfoVpnLink)

ZInfoVpnEndPoint = _reflection.GeneratedProtocolMessageType('ZInfoVpnEndPoint', (_message.Message,), dict(
  DESCRIPTOR = _ZINFOVPNENDPOINT,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoVpnEndPoint)
  ))
_sym_db.RegisterMessage(ZInfoVpnEndPoint)

ZInfoVpnConn = _reflection.GeneratedProtocolMessageType('ZInfoVpnConn', (_message.Message,), dict(
  DESCRIPTOR = _ZINFOVPNCONN,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoVpnConn)
  ))
_sym_db.RegisterMessage(ZInfoVpnConn)

ZInfoVpn = _reflection.GeneratedProtocolMessageType('ZInfoVpn', (_message.Message,), dict(
  DESCRIPTOR = _ZINFOVPN,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoVpn)
  ))
_sym_db.RegisterMessage(ZInfoVpn)

RlocState = _reflection.GeneratedProtocolMessageType('RlocState', (_message.Message,), dict(
  DESCRIPTOR = _RLOCSTATE,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:RlocState)
  ))
_sym_db.RegisterMessage(RlocState)

MapCacheEntry = _reflection.GeneratedProtocolMessageType('MapCacheEntry', (_message.Message,), dict(
  DESCRIPTOR = _MAPCACHEENTRY,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:MapCacheEntry)
  ))
_sym_db.RegisterMessage(MapCacheEntry)

DatabaseMap = _reflection.GeneratedProtocolMessageType('DatabaseMap', (_message.Message,), dict(
  DESCRIPTOR = _DATABASEMAP,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:DatabaseMap)
  ))
_sym_db.RegisterMessage(DatabaseMap)

DecapKey = _reflection.GeneratedProtocolMessageType('DecapKey', (_message.Message,), dict(
  DESCRIPTOR = _DECAPKEY,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:DecapKey)
  ))
_sym_db.RegisterMessage(DecapKey)

ZInfoLisp = _reflection.GeneratedProtocolMessageType('ZInfoLisp', (_message.Message,), dict(
  DESCRIPTOR = _ZINFOLISP,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoLisp)
  ))
_sym_db.RegisterMessage(ZInfoLisp)

ZInfoService = _reflection.GeneratedProtocolMessageType('ZInfoService', (_message.Message,), dict(
  DESCRIPTOR = _ZINFOSERVICE,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoService)
  ))
_sym_db.RegisterMessage(ZInfoService)

ZInfoNetworkObject = _reflection.GeneratedProtocolMessageType('ZInfoNetworkObject', (_message.Message,), dict(
  DESCRIPTOR = _ZINFONETWORKOBJECT,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoNetworkObject)
  ))
_sym_db.RegisterMessage(ZInfoNetworkObject)

ZInfoNetworkInstance = _reflection.GeneratedProtocolMessageType('ZInfoNetworkInstance', (_message.Message,), dict(
  DESCRIPTOR = _ZINFONETWORKINSTANCE,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoNetworkInstance)
  ))
_sym_db.RegisterMessage(ZInfoNetworkInstance)

ZmetIPAssignmentEntry = _reflection.GeneratedProtocolMessageType('ZmetIPAssignmentEntry', (_message.Message,), dict(
  DESCRIPTOR = _ZMETIPASSIGNMENTENTRY,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZmetIPAssignmentEntry)
  ))
_sym_db.RegisterMessage(ZmetIPAssignmentEntry)

ZmetVifInfo = _reflection.GeneratedProtocolMessageType('ZmetVifInfo', (_message.Message,), dict(
  DESCRIPTOR = _ZMETVIFINFO,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZmetVifInfo)
  ))
_sym_db.RegisterMessage(ZmetVifInfo)

ZInfoMsg = _reflection.GeneratedProtocolMessageType('ZInfoMsg', (_message.Message,), dict(
  DESCRIPTOR = _ZINFOMSG,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZInfoMsg)
  ))
_sym_db.RegisterMessage(ZInfoMsg)

ZioBundle = _reflection.GeneratedProtocolMessageType('ZioBundle', (_message.Message,), dict(
  DESCRIPTOR = _ZIOBUNDLE,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZioBundle)
  ))
_sym_db.RegisterMessage(ZioBundle)

memoryMetric = _reflection.GeneratedProtocolMessageType('memoryMetric', (_message.Message,), dict(
  DESCRIPTOR = _MEMORYMETRIC,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:memoryMetric)
  ))
_sym_db.RegisterMessage(memoryMetric)

networkMetric = _reflection.GeneratedProtocolMessageType('networkMetric', (_message.Message,), dict(
  DESCRIPTOR = _NETWORKMETRIC,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:networkMetric)
  ))
_sym_db.RegisterMessage(networkMetric)

zedcloudMetric = _reflection.GeneratedProtocolMessageType('zedcloudMetric', (_message.Message,), dict(
  DESCRIPTOR = _ZEDCLOUDMETRIC,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:zedcloudMetric)
  ))
_sym_db.RegisterMessage(zedcloudMetric)

urlcloudMetric = _reflection.GeneratedProtocolMessageType('urlcloudMetric', (_message.Message,), dict(
  DESCRIPTOR = _URLCLOUDMETRIC,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:urlcloudMetric)
  ))
_sym_db.RegisterMessage(urlcloudMetric)

appCpuMetric = _reflection.GeneratedProtocolMessageType('appCpuMetric', (_message.Message,), dict(
  DESCRIPTOR = _APPCPUMETRIC,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:appCpuMetric)
  ))
_sym_db.RegisterMessage(appCpuMetric)

deviceMetric = _reflection.GeneratedProtocolMessageType('deviceMetric', (_message.Message,), dict(
  DESCRIPTOR = _DEVICEMETRIC,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:deviceMetric)
  ))
_sym_db.RegisterMessage(deviceMetric)

MetricItem = _reflection.GeneratedProtocolMessageType('MetricItem', (_message.Message,), dict(
  DESCRIPTOR = _METRICITEM,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:MetricItem)
  ))
_sym_db.RegisterMessage(MetricItem)

diskMetric = _reflection.GeneratedProtocolMessageType('diskMetric', (_message.Message,), dict(
  DESCRIPTOR = _DISKMETRIC,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:diskMetric)
  ))
_sym_db.RegisterMessage(diskMetric)

appDiskMetric = _reflection.GeneratedProtocolMessageType('appDiskMetric', (_message.Message,), dict(
  DESCRIPTOR = _APPDISKMETRIC,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:appDiskMetric)
  ))
_sym_db.RegisterMessage(appDiskMetric)

appMetric = _reflection.GeneratedProtocolMessageType('appMetric', (_message.Message,), dict(
  DESCRIPTOR = _APPMETRIC,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:appMetric)
  ))
_sym_db.RegisterMessage(appMetric)

PktStat = _reflection.GeneratedProtocolMessageType('PktStat', (_message.Message,), dict(
  DESCRIPTOR = _PKTSTAT,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:PktStat)
  ))
_sym_db.RegisterMessage(PktStat)

RlocStats = _reflection.GeneratedProtocolMessageType('RlocStats', (_message.Message,), dict(
  DESCRIPTOR = _RLOCSTATS,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:RlocStats)
  ))
_sym_db.RegisterMessage(RlocStats)

EidStats = _reflection.GeneratedProtocolMessageType('EidStats', (_message.Message,), dict(
  DESCRIPTOR = _EIDSTATS,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:EidStats)
  ))
_sym_db.RegisterMessage(EidStats)

ZMetricLisp = _reflection.GeneratedProtocolMessageType('ZMetricLisp', (_message.Message,), dict(
  DESCRIPTOR = _ZMETRICLISP,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZMetricLisp)
  ))
_sym_db.RegisterMessage(ZMetricLisp)

ZMetricConn = _reflection.GeneratedProtocolMessageType('ZMetricConn', (_message.Message,), dict(
  DESCRIPTOR = _ZMETRICCONN,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZMetricConn)
  ))
_sym_db.RegisterMessage(ZMetricConn)

ZMetricVpn = _reflection.GeneratedProtocolMessageType('ZMetricVpn', (_message.Message,), dict(
  DESCRIPTOR = _ZMETRICVPN,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZMetricVpn)
  ))
_sym_db.RegisterMessage(ZMetricVpn)

ZMetricNone = _reflection.GeneratedProtocolMessageType('ZMetricNone', (_message.Message,), dict(
  DESCRIPTOR = _ZMETRICNONE,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZMetricNone)
  ))
_sym_db.RegisterMessage(ZMetricNone)

ZMetricFlowLink = _reflection.GeneratedProtocolMessageType('ZMetricFlowLink', (_message.Message,), dict(
  DESCRIPTOR = _ZMETRICFLOWLINK,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZMetricFlowLink)
  ))
_sym_db.RegisterMessage(ZMetricFlowLink)

ZMetricFlowEndPoint = _reflection.GeneratedProtocolMessageType('ZMetricFlowEndPoint', (_message.Message,), dict(
  DESCRIPTOR = _ZMETRICFLOWENDPOINT,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZMetricFlowEndPoint)
  ))
_sym_db.RegisterMessage(ZMetricFlowEndPoint)

ZMetricFlow = _reflection.GeneratedProtocolMessageType('ZMetricFlow', (_message.Message,), dict(
  DESCRIPTOR = _ZMETRICFLOW,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZMetricFlow)
  ))
_sym_db.RegisterMessage(ZMetricFlow)

ZMetricLispGlobal = _reflection.GeneratedProtocolMessageType('ZMetricLispGlobal', (_message.Message,), dict(
  DESCRIPTOR = _ZMETRICLISPGLOBAL,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZMetricLispGlobal)
  ))
_sym_db.RegisterMessage(ZMetricLispGlobal)

ZMetricService = _reflection.GeneratedProtocolMessageType('ZMetricService', (_message.Message,), dict(
  DESCRIPTOR = _ZMETRICSERVICE,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZMetricService)
  ))
_sym_db.RegisterMessage(ZMetricService)

NetworkStats = _reflection.GeneratedProtocolMessageType('NetworkStats', (_message.Message,), dict(
  DESCRIPTOR = _NETWORKSTATS,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:NetworkStats)
  ))
_sym_db.RegisterMessage(NetworkStats)

ZMetricNetworkStats = _reflection.GeneratedProtocolMessageType('ZMetricNetworkStats', (_message.Message,), dict(
  DESCRIPTOR = _ZMETRICNETWORKSTATS,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZMetricNetworkStats)
  ))
_sym_db.RegisterMessage(ZMetricNetworkStats)

ZMetricNetworkInstance = _reflection.GeneratedProtocolMessageType('ZMetricNetworkInstance', (_message.Message,), dict(
  DESCRIPTOR = _ZMETRICNETWORKINSTANCE,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZMetricNetworkInstance)
  ))
_sym_db.RegisterMessage(ZMetricNetworkInstance)

ZMetricMsg = _reflection.GeneratedProtocolMessageType('ZMetricMsg', (_message.Message,), dict(
  DESCRIPTOR = _ZMETRICMSG,
  __module__ = 'zmet_pb2'
  # @@protoc_insertion_point(class_scope:ZMetricMsg)
  ))
_sym_db.RegisterMessage(ZMetricMsg)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\037com.zededa.cloud.uservice.protoZ!github.com/zededa/eve/sdk/go/zmet'))
# @@protoc_insertion_point(module_scope)
