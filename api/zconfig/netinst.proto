// Copyright(c) 2017-2018 Zededa, Inc.
// All rights reserved.

syntax = "proto3";

option java_package = "com.zededa.cloud.uservice.proto";
option go_package = "github.com/zededa/eve/sdk/go/zconfig";

import "devcommon.proto";
import "netcmn.proto";

enum ZNetworkInstType {
  ZNetInstFirst    = 0;
  ZnetInstSwitch   = 1;
  ZnetInstLocal    = 2;
  ZnetInstCloud    = 3;
  ZnetInstMesh     = 4;
  ZnetInstHoneyPot = 5;
  ZnetInstTransparent = 6;
  ZNetInstLast     = 255;
}

enum AddressType {
  First    = 0;
  IPV4    = 1;
  IPV6    = 2;
  CryptoIPV4    = 3;
  CryptoIPV6    = 4;
  Last    = 255;
}

enum ZNetworkOpaqueConfigType {
	ZNetOConfigVPN   = 0;
	ZNetOConfigLisp  = 1;
}

// Network Instance Opaque config. In future we might add more fields here
// but idea is here. This is service specific configuration.
message NetworkInstanceOpaqueConfig {
	string oconfig = 1;
	NetworkInstanceLispConfig lispConfig = 2;
	ZNetworkOpaqueConfigType  type = 3;
}

// Lisp NetworkInstance config
message NetworkInstanceLispConfig {
        repeated ZcServicePoint LispMSs = 1;
        uint32 LispInstanceId = 2;

        bool allocate = 3;
        bool exportprivate = 4;
        bytes allocationprefix = 5;
        uint32 allocationprefixlen = 6;

	// various configuration to dataPlane, lispers.net vs Zededa
	bool experimental = 20;
}

message NetworkInstanceConfig {
	UUIDandVersion uuidandversion = 1;
	string displayname = 2;

	// instType - Type of network instance ( local, bridge etc )
	ZNetworkInstType instType = 4;
  // activate
  //  - True by default. If set to false ( inactivate), the network instance
  //    configuration is downloaded to the device, but the network instance
  //    itself is not created on the device.
	bool activate = 5;

	// port - Only a single port is supported.
  //    This is used as the external connection for the network instance.
  //    This can be a physical (eth0 ) or logical port (vlan 0).
  //    The port name comes from DeviceConfig ( When it is supported in future).
  //    If the user needs multiple physical ports, Device config should be
  //    used to create a label for multiple physical ports.
	Adapter port = 20;

	// cfg - Used to pass some feature-specific configuration to the
  //       network instance. For Ex: Lisp, StriongSwan etc
	NetworkInstanceOpaqueConfig cfg = 30;

	// type of ipSpec
	AddressType ipType = 39;

	// network ip specification
	ipspec ip = 40;

	// static DNS entry, if we are running DNS/DHCP service
	repeated ZnetStaticDNSEntry dns = 41;
}
